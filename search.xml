<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[用GitLab搭建团队协作平台]]></title>
      <url>http://tenstone.me/2017/06/21/job/%E7%94%A8GitLab%E6%90%AD%E5%BB%BA%E5%9B%A2%E9%98%9F%E5%8D%8F%E4%BD%9C%E5%B9%B3%E5%8F%B0/</url>
      <content type="html"></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[圈子经济]]></title>
      <url>http://tenstone.me/2016/08/26/diary/%E5%9C%88%E5%AD%90%E7%BB%8F%E6%B5%8E/</url>
      <content type="html"><![CDATA[<p>增加在公共媒体的曝光度，会放大一个人的价值，今年火爆的自媒体、网红、粉丝、读书会、商会等等都是基于社交圈子的概念，我把他概括为圈子经济。社交是人类社会的本质属性，而圈子是社交的重要形式，有共同意向的人更容易行成一个联盟，从而实现资源对接和增加社会分工协作的机会，这一点与美国创业公司的发展方式是不谋而合的。<br>而知乎大V、微博大V、微信公众号都也都成为低成本打造社会关系和社会影响力的重要途径。从根本上讲，互联网圈子就是要不断创造内容，让内容订阅者有所收获，提升自己的价值，或带来娱乐的效果。<br>于是，我也决定在互联网上创造内容。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[到正在发生变化的行业去]]></title>
      <url>http://tenstone.me/2016/08/25/diary/%E5%88%B0%E6%AD%A3%E5%9C%A8%E5%8F%91%E7%94%9F%E5%8F%98%E5%8C%96%E7%9A%84%E8%A1%8C%E4%B8%9A%E5%8E%BB/</url>
      <content type="html"><![CDATA[<p>从互联网创始之初，就开始推动着人类的思维方式和生活方式的改变。<br>2000年QQ出现<br>2009年开始火爆的Facebook<br>2011年的千团大战<br>2014年旅游行业火爆<br>2015年O2O上门服务、媒体<br>2016年的VR、直播、人工智能、工业4.0、电动汽车</p>
<p>虽然每个主题的火爆，资本和创业项目的每一轮泡沫，最终都以破灭告终，但都将沉淀为寡头竞争，并且对大众的生活造成一定的影响。<br>自古就有“乱世造英雄”的说法；换句话说，要想做英雄，到变化最快的地方去。<br>因为变化越快，大家就越看不透，看不透就会产生一种“偶像心态”。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[扩大舒适区，成为真正的高手]]></title>
      <url>http://tenstone.me/2016/08/25/notes/%E6%8B%A5%E6%8A%B1%E5%8F%98%E5%8C%96-%E8%84%B1%E7%A6%BB%E8%88%92%E9%80%82%E5%8C%BA/</url>
      <content type="html"><![CDATA[<p>最近一直在关注经济社会变化趋势，各种新闻热点的连番轰炸，弄的我有点心力交瘁。今天在罗胖子的《罗辑思维》听了第一集《怎样成为一个高手》，里面提出了一个点让我有所感触，就是美国人Noel Tichy提出的“Fields of Experience”理论。</p>
<p><img src="/images/2016/zones.jpg" alt=""><br>心理学研究说，人类对于外部世界的认识可分为三个区域：舒适区（comfort zone），学习区（stretch zone），和恐慌区（stress zone）。</p>
<ol>
<li>舒适区：在舒适区我们得心应手，每天处于熟悉的环境中，做在行的的事情，和熟悉的人交际，甚至你就是这个领域的专家，对这个区域中的人和事感觉很舒适。但是学到的东西很少，进步缓慢，而且一旦跳出这个领域，面对不熟悉的环境及变化，你可能会觉得有压力，无所适从。</li>
<li>学习区：我们很少接触甚至未曾涉足的领域，充满新颖的事物，在这里可以充分的锻炼自我，挑战自我。比如，生活中，换一条上班的路线；学习中，接触另一个专业的书籍；工作中，切换到另外一个岗位。</li>
<li>恐慌区，顾名思义，在这个区域中会感到忧虑，恐惧，不堪重负。比如在公共场合演讲，或者从事一些危险的极限运动。<br>只有在“学习区”内做事，人才会进步。尝试新鲜事物，探索未知领域，能开拓思维和视野，激发潜力。如果现在的你在恐慌区，那么首要就是要建立自信，克服恐惧和忧虑，马克吐温：【我曾经有很长一段时间生活在恐惧之中，但是事实上大部分我所忧虑的事情并没有发生】。很多事情其实很简单，只是我们在思想上把他们复杂化、困难化了。</li>
</ol>
<p>这是一个看起来“大家都知道”的道理。不过，这个理论反过来可以帮助我们根据自己心里状态调整心态，从而找到一个理想的学习状态。因为最近这段时间，我也正是陷入恐慌区中，时常陷入焦虑，慌乱，无所适从。按这个原理，我应该给自己重新定位，放松一点，找回最好的学习状态，让自己更快速的成长。<br>往往会有一个误区，就是介于学习区和舒适区之间的“舒适的学习”。真正的学习，需要付出努力并且认真的思考后，固化到大脑的物理结构中才能发挥效用。走马观花，最终可能并不会带来知识上的收获。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[穷和富的故事]]></title>
      <url>http://tenstone.me/2016/08/15/diary/%E7%A9%B7%E5%92%8C%E5%AF%8C%E7%9A%84%E6%95%85%E4%BA%8B/</url>
      <content type="html"><![CDATA[<p>这是圣经《马太福音》中的一则寓言，一个很真实的让人无力反驳的故事。</p>
<pre><code>“所以，你們把那一千兩銀子從他那裡拿走，給那個有一萬兩的；”
“因为凡是有的，还要赐给他，使他丰足有余；那没有的，连他有的也将从他那里被拿走。”
</code></pre><p>拿中国字中的“窮”和“富”来说，穷代表通过出卖体力（脑力）来供养家庭；而富中的田代表资产，他们不需要出卖体力就可以锦衣玉食。所以富人的逻辑就在于拥有更多的资产，能在不需要出卖体力的情况下带来更多的带来收益；而穷人努力赚到的仅有的钱，又会回流到富人的口袋。</p>
<h3 id="一则小故事给你简单明了的说明"><a href="#一则小故事给你简单明了的说明" class="headerlink" title="一则小故事给你简单明了的说明"></a>一则小故事给你简单明了的说明</h3><p><img src="/images/2016/poor_and_rich.png" alt=""> </p>
<p>【贫富分化引发的人种分化】贫富差距作用在生理层面早已不是新闻了，贫富造成的生理差异度已经超过性别、肤色，不仅具备隔离性、全球性和可“遗传”性，而且随着贫富分化而不断加大。而平等的基础是建立在同一物种之上，如果我们不能从现在开始对抗不平等……于是，一件事就自然而然地发生了，你是个聪明人，应该能想到。”<br>“富人和穷人已经不是同一个……同一个……”<br>“富人和穷人已经不是同一个物种了，就像穷人和狗不是同一个物种一样，穷人不再是人了。”<br>“哦，那事情可真的变了很多。”——刘慈欣《赡养人类》</p>
<h3 id="我要做些什么不要被富人的时代抛弃"><a href="#我要做些什么，不要被富人的时代抛弃" class="headerlink" title="我要做些什么，不要被富人的时代抛弃"></a>我要做些什么，不要被富人的时代抛弃</h3><ol>
<li>尽最大努力，像富人一样生活</li>
<li>尽最大努力，像富人一样思考</li>
<li>磨砺技能，提高收入，并把收入的15%用于理财</li>
<li>不抱怨，不轻易放弃，做事持之以恒，保持乐观</li>
<li>不吃高脂肪高能量的食物，不能胖</li>
<li>多运动，多锻炼</li>
<li>学习、学习、学习、学习、永不停止的学习</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[情感化设计]]></title>
      <url>http://tenstone.me/2016/06/15/design/%E6%83%85%E6%84%9F%E5%8C%96%E8%AE%BE%E8%AE%A1/</url>
      <content type="html"><![CDATA[<p>正如我们所认为的，对于一个产品（可以是机械设备、APP、网页），产品设计本身就是最好的说明书，但这里并不讨论我们通常认为的产品设计，而是设计传达出来的另一种东西。<br><img src="/images/2016/emotionalized-design.jpg" alt=""><br>当你注视上面的几个表情时，是否会受到影响而产生细微的情绪波动呢？设计，承载着功能和情感传达。</p>
]]></content>
      
        <categories>
            
            <category> 设计 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 产品 </tag>
            
            <tag> 设计 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[月记一则]]></title>
      <url>http://tenstone.me/2016/05/30/diary/%E6%9C%88%E8%AE%B0%E4%B8%80%E5%88%99/</url>
      <content type="html"><![CDATA[<p><strong>生活</strong><br>转眼间，又要到6月份了。南京的五月一直阴雨绵绵，让人总保持一种不爽快的感觉，不过现在就要过去啦，萌萌哒。<br>上周末见了仍然在壹进制的老管，聊了挺久，话题依旧，互相了解对方的发展和下一步的打算，回顾以往的交流，不安于现状是个老生常谈的话题。不过关于一位前同事跟我一起离职，成为一个很尴尬的问题，事实上选择后来的公司都是我们自己的决定，并不存在谁挖谁的说法。</p>
<p>而我两次创业创业经历，俨然成为跟朋友吹牛的资本，其实我也不知道是否正确，信口开河的习惯，使我很难去字字寻根求据。但，事事寻根据逐渐成为我行动前必须要干的事情，做事要对自己负责，说话要对别人负责。</p>
<p>过去的一个月，我又入市了，所以过去的N篇文章都跟金融有关。几乎每个人都有财务自由的梦想，我也一样，梦想驱使着我成为韭菜大军的一员，这一次我希望利用自己掌握的IT知识能有所成就。但是对目前而言，学习技术、历练心态才是最重要的课题。在一些股市经典著作中发现，金融市场跟人类哲学是相通的，同样由宇宙法则驱动，股市波动是人性的折射。不管前方艰难险阻，梦还得继续做！</p>
<p><strong>工作</strong><br>在我四月份提出B端融资的方向之后，公司在融资的道路上似乎比之前更顺畅了些，众多资本反馈良好。天知道会不会像前面的几次一样，签了TS然后夭折。<br>还是那句话，生活不止眼前的苟且，还有诗和远方。</p>
]]></content>
      
        <categories>
            
            <category> 生活随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[移动平均]]></title>
      <url>http://tenstone.me/2016/05/17/finance/%E7%A7%BB%E5%8A%A8%E5%B9%B3%E5%9D%87/</url>
      <content type="html"><![CDATA[<p>移动平均线(Moving Average) 是一种最基本而又有效的趋势判别指标。移动平均线的概念是将过往某段时间内的收市价相加，计算其平均数，如是者每日计算，串连起来，形成一条线状附于图表上，用作走势分析。这一条线便称之为“移动平均线(MA)”，而我们所采用的是简单移动平均线(Simple Moving Average)的计算法。</p>
<p><a href="https://zh.wikipedia.org/wiki/移動平均" target="_blank" rel="external">维基百科:移动平均</a></p>
<ol>
<li><a href="http://wiki.mbalib.com/wiki/%E6%8C%87%E6%95%B0%E5%B9%B3%E5%9D%87%E6%95%B0%E6%8C%87%E6%A0%87" target="_blank" rel="external">指数移动平均</a>（英语：Exponential Moving Average，EMA或EWMA）</li>
<li>简单移动平均（英语：Simple Moving Average，SMA）</li>
<li>加权移动平均（英语：Weighted Moving Average，WMA）</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 金融 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 金融 </tag>
            
            <tag> 量化投资 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[需求模型]]></title>
      <url>http://tenstone.me/2016/05/14/finance/%E9%9C%80%E6%B1%82%E6%A8%A1%E5%9E%8B/</url>
      <content type="html"><![CDATA[<h3 id="供应和需求模型"><a href="#供应和需求模型" class="headerlink" title="供应和需求模型"></a><a href="http://wiki.mbalib.com/wiki/%E4%BE%9B%E5%BA%94%E5%92%8C%E9%9C%80%E6%B1%82%E6%A8%A1%E5%9E%8B" target="_blank" rel="external">供应和需求模型</a></h3><p>供应和需求是经济运行中的重要组成部分，它主要描述顾客和生产商之间的相互作用。这个管理模型中的基本因素是供应曲线（supply curve）、需求曲线（demand curve）、均衡价格（equilibrium price）、均衡数量（equilibrium quantity）、消费者剩余（consumer surplus）生产者剩余（producer surplus）。下图表明了上述各个因素之间的相互关系。<br><img src="/images/2016/供应和需求模型图.jpg" alt=""></p>
<h3 id="需求层次理论"><a href="#需求层次理论" class="headerlink" title="需求层次理论"></a><a href="https://zh.wikipedia.org/wiki/%E9%9C%80%E6%B1%82%E5%B1%82%E6%AC%A1%E7%90%86%E8%AE%BA" target="_blank" rel="external">需求层次理论</a></h3><p>亚伯拉罕·马斯洛于1943年《心理学评论》的论文〈人类动机的理论〉（A Theory of Human Motivation）中所提出的理论[2]。马斯洛随后延伸了这个想法，包含了他对人类天生好奇心的观察。他的理论与其他人类发展心理学的理论可以并行，尤其是针对人类成长阶段的描述。马斯洛使用了“生理”、“安全”、“隶属”与“爱”、“自尊”、“自我实现”与“自我超越”等术语，描述人类动机推移的脉络。<br><img src="/images/2016/需求层次理论.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 经济学 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 计量经济学 </tag>
            
            <tag> 需求 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[微观经济学：价格理论]]></title>
      <url>http://tenstone.me/2016/05/13/finance/%E5%BE%AE%E8%A7%82%E7%BB%8F%E6%B5%8E%E5%AD%A6%EF%BC%9A%E4%BB%B7%E6%A0%BC%E7%90%86%E8%AE%BA/</url>
      <content type="html"><![CDATA[<h3 id="新价格理论"><a href="#新价格理论" class="headerlink" title="新价格理论"></a><a href="http://wiki.mbalib.com/wiki/%E6%96%B0%E4%BB%B7%E6%A0%BC%E7%90%86%E8%AE%BA" target="_blank" rel="external">新价格理论</a></h3><p>新价格理论研究了供求与价格的因果作用关系，否定了传统价格理论认为价格可以决定供求的观点，认为供求决定了价格，供求与价格是单向的因果关系，而价格对供求的作用是反馈作用，既有负反馈作用，也有正反馈作用，因此，价格对供求的作用结果是不确定的。而传统价格理论认为价格对供求行为的作用是确定的（需求定律）。</p>
<h3 id="价格理论"><a href="#价格理论" class="headerlink" title="价格理论"></a><a href="http://wiki.mbalib.com/wiki/%E4%BB%B7%E6%A0%BC%E7%90%86%E8%AE%BA" target="_blank" rel="external">价格理论</a></h3><p>价格理论是指在长期价格实践中逐渐孕育出的理论，目前已经形成和发展为系统的价格理论体系。起初，人们对价格的认识还是很肤浅、零碎的，随着经验的积累和研究的深入，对价格的认识逐渐深化并系统化，价格理论也逐步得到发展。其发展过程可以分为古代价格理论的萌芽和形成、欧洲古典经济学的价格理论、马克思主义价格理论三个大的阶段。现在，价格理论仍在不断发展。</p>
<p>古代价格理论的萌芽和形成经历了几千年的漫长历程。价格反映的是一种商品交换关系。人们曾经估计商品交换存在了5000——7000年之久，随着考古和历史研究的进展，这一年限可能上溯到更久远。作为表示价格的货币形式大约也有四千年左右的历史。一些文明古国。如埃及、巴比伦、印度、中国。商品交换和商业贸易活动很早就产生了，货币出现的很早，价格观念和价格理论的萌芽也出现的很早。古代希伯来民族和希腊、罗马时代的价格观念与价格理论也留下了历史的痕迹。其中最有代表性的是中国古代春秋战国时期的价格理论和古代希腊的价格理论。</p>
<p>经过多年的发展，当前价格理论已日臻成熟。当前居于主流地位的价格理论，分为完全竞争价格理论，垄断价格理论和垄断竞争价格理论，这三种价格理论各有不同。其中，完全竞争价格理论是价格理论的重点，也是区分不同价格学派的主要理论。</p>
]]></content>
      
        <categories>
            
            <category> 金融 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 经济学 </tag>
            
            <tag> 价格理论 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[计量经济学]]></title>
      <url>http://tenstone.me/2016/05/13/finance/%E8%AE%A1%E9%87%8F%E7%BB%8F%E6%B5%8E%E5%AD%A6/</url>
      <content type="html"><![CDATA[<h3 id="arch模型-autoregressive-conditional-heteroskedasticity-model"><a href="#ARCH模型-Autoregressive-conditional-heteroskedasticity-model" class="headerlink" title="ARCH模型 (Autoregressive conditional heteroskedasticity model)"></a><a href="http://wiki.mbalib.com/wiki/ARCH%E6%A8%A1%E5%9E%8B" target="_blank" rel="external">ARCH模型 (Autoregressive conditional heteroskedasticity model)</a></h3><p>ARCH模型的基本思想是指在以前信息集下，某一时刻一个噪声的发生是服从正态分布。该正态分布的均值为零，方差是一个随时间变化的量(即为条件异方差)。并且这个随时间变化的方差是过去有限项噪声值平方的线性组合(即为自回归)。这样就构成了自回归条件异方差模型。</p>
<h3 id="garch模型generalized-autoregressive-conditional-heteroskedasticity"><a href="#GARCH模型-Generalized-AutoRegressive-Conditional-Heteroskedasticity" class="headerlink" title="GARCH模型(Generalized AutoRegressive Conditional Heteroskedasticity)"></a><a href="http://wiki.mbalib.com/wiki/GARCH%E6%A8%A1%E5%9E%8B" target="_blank" rel="external">GARCH模型(Generalized AutoRegressive Conditional Heteroskedasticity)</a></h3><h3 id="波动率-volatility"><a href="#波动率-Volatility" class="headerlink" title="波动率 (Volatility)"></a><a href="http://wiki.mbalib.com/wiki/%E6%B3%A2%E5%8A%A8%E7%8E%87" target="_blank" rel="external">波动率 (Volatility)</a></h3><p>波动率是金融资产价格的波动程度，是对资产收益率不确定性的衡量，用于反映金融资产的风险水平。从经济意义上解释，产生波动率的主要原因来自以下三个方面：</p>
<blockquote>
<ol>
<li>宏观经济因素对某个产业部门的影响，即所谓的系统风险；</li>
<li>特定的事件对某个企业的冲击，即所谓的非系统风险；</li>
<li>投资者心理状态或预期的变化对股票价格所产生的作用。</li>
</ol>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 金融 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 金融 </tag>
            
            <tag> 经济学 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[博弈论与经济学]]></title>
      <url>http://tenstone.me/2016/05/11/finance/%E5%8D%9A%E5%BC%88%E8%AE%BA%E4%B8%8E%E7%BB%8F%E6%B5%8E%E5%AD%A6/</url>
      <content type="html"><![CDATA[<p><a href="https://zh.wikipedia.org/wiki/%E5%8D%9A%E5%BC%88%E8%AE%BA" target="_blank" rel="external">博弈论（英语：Game theory）</a>，又译为对策论，或者赛局理论，应用数学的一个分支。目前在生物学、经济学、国际关系、计算机科学、政治学、军事战略和其他很多学科都有广泛的应用。主要研究公式化了的激励结构（游戏或者博弈）间的相互作用。是研究具有斗争或竞争性质现象的数学理论和方法。<br><img src="/images/2016/game_theory.png" alt=""></p>
<h3 id="零和博弈-zero-sum-game-非合作博弈"><a href="#零和博弈-Zero-Sum-Game-非合作博弈" class="headerlink" title="零和博弈 (Zero-Sum Game) 非合作博弈"></a><a href="https://zh.wikipedia.org/wiki/%E9%9B%B6%E5%92%8C%E5%8D%9A%E5%BC%88" target="_blank" rel="external">零和博弈 (Zero-Sum Game)</a> 非合作博弈</h3><p>零和博弈（如果一方得益，另一方必然损失）表示所有博弈方的利益之和为零或一个常数，即一方有所得，其他方必有所失。在零和博弈中，博弈各方是不合作的。</p>
<h3 id="非零和博弈-cooperative-game-合作博弈"><a href="#非零和博弈-Cooperative-Game-合作博弈" class="headerlink" title="非零和博弈 (Cooperative Game) 合作博弈"></a><a href="http://wiki.mbalib.com/wiki/%E5%90%88%E4%BD%9C%E5%8D%9A%E5%BC%88" target="_blank" rel="external">非零和博弈 (Cooperative Game)</a> 合作博弈</h3><p>非零和博弈表示在不同策略组合下各博弈方的得益之和是不确定的变量，故又称之为变和博弈。</p>
<h3 id="随机博弈-stochastic-game"><a href="#随机博弈-stochastic-game" class="headerlink" title="随机博弈 (stochastic game)"></a><a href="https://zh.wikipedia.org/wiki/%E9%9A%8F%E6%9C%BA%E5%8D%9A%E5%BC%88" target="_blank" rel="external">随机博弈 (stochastic game)</a></h3><p>这类博弈由一系列阶段组成。在博弈中每一阶段的起始，博弈处于某种特定状态。每一参与者选择某种行动，然后会获得取决于当前状态和所选择行动的收益。之后，博弈发展到下一阶段，处于一个新的随机状态，这一随机状态的分布取决于先前状态和各位参与者选择的行动。在新状态中重复上述过程，然后博弈继续进行有限或无限个数的阶段。一个参与者得到的总收益常用各阶段收益的贴现和，或是各阶段收益平均值的下极限来计算。</p>
<p><img src="/images/2016/stochastic_game.png" alt=""><br>贴现因子为$\lambda （0&lt;\lambda \leq 1）$的贴现博弈$\Gamma<em>\lambda$ 中，参与者i 的收益是$\lambda \sum</em>{t=1}^{\infty}(1-\lambda)^{t-1}g^i_t$ 。n 阶段博弈中，参与者i 的收益是$\bar{g}^i<em>n:=\frac1n\sum</em>{t=1}^ng^i_t$ 。</p>
<h3 id="重复博弈-repeated-game"><a href="#重复博弈-repeated-game" class="headerlink" title="重复博弈 (repeated game)"></a><a href="http://wiki.mbalib.com/wiki/%E9%87%8D%E5%A4%8D%E5%8D%9A%E5%BC%88" target="_blank" rel="external">重复博弈 (repeated game)</a></h3><p>重复博弈是指同样结构的博弈重复许多次，其中的每次博弈称为“阶段博弈”（stage games）。重复博弈是动态博弈中的重要内容，它可以是完全信息的重复博弈，也可以是不完全信息的重复博弈。</p>
<h3 id="纳什均衡nash-equilibrium-非合作博弈均衡"><a href="#纳什均衡-Nash-equilibrium-非合作博弈均衡" class="headerlink" title="纳什均衡(Nash equilibrium) 非合作博弈均衡"></a><a href="http://wiki.mbalib.com/wiki/%E7%BA%B3%E4%BB%80%E5%9D%87%E8%A1%A1" target="_blank" rel="external">纳什均衡(Nash equilibrium)</a> 非合作博弈均衡</h3><p>纳什均衡点概念提供了一种非常重要的分析手段，使博弈论研究可以在一个博弈结构里寻找比较有意义的结果。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[凯利方程式]]></title>
      <url>http://tenstone.me/2016/05/11/finance/%E5%87%AF%E5%88%A9%E6%96%B9%E7%A8%8B%E5%BC%8F/</url>
      <content type="html"><![CDATA[<p><a href="https://zh.wikipedia.org/wiki/%E5%87%B1%E5%88%A9%E5%85%AC%E5%BC%8F" target="_blank" rel="external">在概率论中，凯利公式（英语：Kelly formula），也称凯利方程式</a>。</p>
<p>凯利公式的最一般性陈述为，借由寻找能最大化结果对数期望值的资本比例f*，即可获得长期增长率的最大化。对于只有两种结果（输去所有注金，或者获得资金乘以特定赔率的彩金）的简单赌局而言，可由一般性陈述导出以下式子：</p>
<p>$f^* = \frac{bp-q}{b}$  , 其中</p>
<blockquote>
<p>f*为现有资金应进行下次投注的比例；<br>b为投注可得的赔率（不含本金）；<br>p为获胜率；<br>q为落败率，即1 - p；</p>
</blockquote>
<p>方程式假设货币与赌局可无穷分割，而只要资金足够多，在实际应用上不成问题。举例而言，若一赌博有60%的获胜率（p = 0.6，q = 0.4），而赌客在赢得赌局时，可获得二对一的赔率（b = 1），则赌客应在每次机会中下注现有资金的20%（f* = 0.2），以最大化资金的长期增长率。</p>
<p><img src="/images/2016/kelly.png" alt=""><br>As we can see from the diagram above, if we bet twice Kelly, we would have an expected growth rate of zero, and further increasing our bet would be a suicide in long run, even if we have the advantage in the gamble. The expected long-term growth rate will also decrease when the gambler bets aggressively, yet with higher risk than Kelly. This is why some gamblers would use a “Half Kelly”, half betting size of Kelly’s Criterion, to protect them from being over-aggressive. The size is halved while the expected growth rate is 75% of Kelly’s, which makes “Half Kelly” a welcoming choice.</p>
<p>[1] <a href="https://pjdelta.wordpress.com/2014/03/24/kellys-criterion/" target="_blank" rel="external">kellys criterion</a></p>
]]></content>
      
        <categories>
            
            <category> 金融 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 金融 </tag>
            
            <tag> 物理 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[正反馈和负反馈]]></title>
      <url>http://tenstone.me/2016/05/11/finance/%E6%AD%A3%E5%8F%8D%E9%A6%88%E5%92%8C%E8%B4%9F%E5%8F%8D%E9%A6%88/</url>
      <content type="html"><![CDATA[<blockquote>
<p>任何在正反博弈中寻求平衡的系统中，都是正负反馈的调节的结果。</p>
</blockquote>
<h3 id="正反馈-positive-feedback"><a href="#正反馈-positive-feedback" class="headerlink" title="正反馈 (positive feedback)"></a><a href="https://zh.wikipedia.org/wiki/%E6%AD%A3%E5%9B%9E%E9%A5%8B" target="_blank" rel="external">正反馈 (positive feedback)</a></h3><p>简单来说，当A产生了更多的B，B会回过来产生更多的A，这个过程就称为正反馈。在机械、电机、电子、化学、经济或是其他系统都会有类似的情形。</p>
<h3 id="负反馈-negative-feedback"><a href="#负反馈-negative-feedback" class="headerlink" title="负反馈 (negative feedback)"></a><a href="https://zh.wikipedia.org/wiki/%E8%B4%9F%E5%8F%8D%E9%A6%88" target="_blank" rel="external">负反馈 (negative feedback)</a></h3><p>在物理系统及生物系统中，许多不同的影响会互相制衡，例如说在生物体内，某一种化学物质会使生物系统趋向一特定状态，而另外一种化学物质会使系统远离该状态，若其中至少有一种的影响是非线性的，就可能会有平衡点出现。</p>
<h3 id="正负反馈的关系易学中的阴阳关系"><a href="#正负反馈的关系（易学中的阴阳关系）" class="headerlink" title="正负反馈的关系（易学中的阴阳关系）"></a>正负反馈的关系（易学中的阴阳关系）</h3><p><img src="/images/2016/compare_positive_negative_feedback.gif" alt=""><br><img src="/images/2016/compare_positive_negative_feedback2.gif" alt=""></p>
<h4 id="生物学"><a href="#生物学" class="headerlink" title="生物学"></a>生物学</h4><p><img src="/images/2016/positive-negative-feedback.jpg" alt=""></p>
<h4 id="经济学"><a href="#经济学" class="headerlink" title="经济学"></a>经济学</h4><p><img src="/images/2016/positive-negative-feedback2.jpg" alt=""></p>
<h4 id="管理学"><a href="#管理学" class="headerlink" title="管理学"></a>管理学</h4><p><img src="/images/2016/positive-negative-feedback3.jpg" alt=""></p>
<h4 id="物理学"><a href="#物理学" class="headerlink" title="物理学"></a>物理学</h4><p><img src="/images/2016/positive-negative-feedback4.jpg" alt=""><br>结论：正负反馈的规律是普适的。对于宏观的问题，要从整个系统层面去考虑，利用正负反馈的规律顺势而为，才能取得最好的效果。而量化分析，是寻找正负反馈规律的基础。</p>
<p>[1] <a href="https://zh.wikipedia.org/wiki/%E9%A9%AC%E5%A4%AA%E6%95%88%E5%BA%94" target="_blank" rel="external">马太效应，社会上常见的正反馈“富者愈富，贫者愈贫”</a></p>
]]></content>
      
        <categories>
            
            <category> 金融 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 金融 </tag>
            
            <tag> 社会心理学 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[时间序列分析方法]]></title>
      <url>http://tenstone.me/2016/05/09/machine_learning/%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>时间序列分析是根据系统观测得到的时间序列数据，通过曲线拟合和参数估计来建立数学模型的理论和方法。它一般采用曲线拟合和参数估计方法（如非线性最小二乘法）进行。时间序列分析常用在国民经济宏观控制、区域综合发展规划、企业经营管理、市场潜量预测、气象预报、水文预报、地震前兆预报、农作物病虫灾害预报、环境污染控制、生态平衡、天文学和海洋学等方面。</p>
<p><img src="/images/2016/time_series_analysis.jpg" alt=""></p>
<h3 id="自回归滑动平均模型-autoregressive-moving-average-model-arma"><a href="#自回归滑动平均模型-Autoregressive-moving-average-model-ARMA" class="headerlink" title="自回归滑动平均模型 (Autoregressive moving average model, ARMA)"></a><a href="https://zh.wikipedia.org/wiki/ARMA%E6%A8%A1%E5%9E%8B" target="_blank" rel="external">自回归滑动平均模型 (Autoregressive moving average model, ARMA)</a></h3><p>是研究时间序列的重要方法，由自回归模型（简称AR模型）与滑动平均模型（简称MA模型）为基础“混合”构成。在市场研究中常用于长期追踪资料的研究，如：Panel研究中，用于消费行为模式变迁研究；在零售研究中，用于具有季节变动特征的销售量、市场规模的预测等。</p>
<h3 id="差分整合移动平均自回归模型-autoregressive-integrated-moving-average-model-arima"><a href="#差分整合移动平均自回归模型-Autoregressive-Integrated-Moving-Average-model-ARIMA" class="headerlink" title="差分整合移动平均自回归模型 (Autoregressive Integrated Moving Average model, ARIMA)"></a><a href="https://zh.wikipedia.org/wiki/ARIMA%E6%A8%A1%E5%9E%8B" target="_blank" rel="external">差分整合移动平均自回归模型 (Autoregressive Integrated Moving Average model, ARIMA)</a></h3><p>差分整合移动平均自回归模型，又称整合移动平均自回归模型（移动也可称作滑动），时间序列预测分析方法之一。ARIMA（p，d，q）中，AR是”自回归”，p为自回归项数；MA为”滑动平均”，q为滑动平均项数，d为使之成为平稳序列所做的差分次数（阶数）。“差分”一词虽未出现在ARIMA的英文名称中，却是关键步骤。</p>
<p><img src="/images/2016/2-autoregressive-integrated-moving-average.jpg" alt=""></p>
<!--### [神经网络预测]-->
<!--### [SVM预测]-->
<!--### [灰色预测]-->
<!--### [模糊预测]-->
<!--### [组合预测]-->
<h3 id="协整理论-cointegration"><a href="#协整理论-cointegration" class="headerlink" title="协整理论 (cointegration)"></a><a href="http://wiki.mbalib.com/wiki/%E5%8D%8F%E6%95%B4%E7%90%86%E8%AE%BA" target="_blank" rel="external">协整理论 (cointegration)</a></h3><p>协整即存在共同的随机性趋势。协整检验的目的是决定一组非平稳序列的线性组合是否具有稳定的均衡关系，伪回归的一种特殊情况即是两个时间序列的趋势成分相同，此时可能利用这种共同趋势修正回归使之可靠。正是由于协整传递出了一种长期均衡关系，若是能在看来具有单独随机性趋势的几个变量之间找到一种可靠联系，那么通过引入这种醉汉与狗之间距离的“相对平稳”对模型进行调整，可以排除单位根带来的随机性趋势，即所称的误差修正模型。<br><img src="/images/2016/cointegration1.jpg" alt=""></p>
<p>[1] <a href="http://cs229.stanford.edu/proj2012/BussetiOsbandWong-DeepLearningForTimeSeriesModeling.pdf" target="_blank" rel="external">(Stanford)Deep learning for time series model</a><br>[2] <a href="https://www.joinquant.com/algorithm/index/edit?algorithmId=8d6377bc4f2b85a702e28251f49bbbef" target="_blank" rel="external">JoinQuant中的协整案例</a></p>
]]></content>
      
        <categories>
            
            <category> 机器学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 机器学习 </tag>
            
            <tag> 时间序列分析 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用Weka进行数据挖掘]]></title>
      <url>http://tenstone.me/2016/05/08/machine_learning/%E7%94%A8Weka%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/</url>
      <content type="html"><![CDATA[<p>Weka是由新西兰怀卡托大学用Java开发的数据挖掘常用软件。Weka限制在GNU通用公众证书的条件下发布，它几乎可以运行在所有操作系统平台上，包括Linux、Windows、OS X等。Weka非常适合初学者的工具，基于GUI的操作和数据集的可视化让学习和调参过程变得非常愉快。<br><img src="/images/2016/weka_knowledgeflow.jpg" alt=""></p>
<h3 id="名称-gt算法对应"><a href="#名称-gt-算法对应" class="headerlink" title="名称-&gt;算法对应"></a>名称-&gt;算法对应</h3><p>functions —-  MultilayerPerceptron -&gt; BP也叫多层前馈网络，而BP在weka中就是由算法实现的。<br>trees     —-  J48 -&gt; 策略树<br>package timeseriesForecasting       -&gt; 支持实现序列的处理</p>
<h3 id="数据集可挖掘的意义验证"><a href="#数据集可挖掘的意义验证" class="headerlink" title="数据集可挖掘的意义验证"></a>数据集可挖掘的意义验证</h3><p>经过试验，使用策略树、神经网络等不同的模型对预测结果的影响并不是很大，仅相差几个点。对预测结果起决定性的因素，是自变量和因变量之间的相关性。假设预测的操作过程没有问题，测试的准确率高于随机结果，说明自变量和因变量之间存在关联。</p>
]]></content>
      
        <categories>
            
            <category> 机器学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 机器学习 </tag>
            
            <tag> 数据挖掘 </tag>
            
            <tag> 软件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[机器学习降维算法]]></title>
      <url>http://tenstone.me/2016/05/07/machine_learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E9%99%8D%E7%BB%B4%E7%AE%97%E6%B3%95/</url>
      <content type="html"><![CDATA[<h3 id="主成分分析算法-principal-components-analysis-pca"><a href="#主成分分析算法-Principal-components-analysis-PCA" class="headerlink" title="主成分分析算法 (Principal components analysis, PCA)"></a><a href="https://zh.wikipedia.org/wiki/%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90" target="_blank" rel="external">主成分分析算法 (Principal components analysis, PCA)</a></h3><p>一种分析、简化数据集的技术。主成分分析经常用于减少数据集的维数，同时保持数据集中的对方差贡献最大的特征。这是通过保留低阶主成分，忽略高阶主成分做到的。这样低阶成分往往能够保留住数据的最重要方面。但是，这也不是一定的，要视具体应用而定。由于主成分分析依赖所给数据，所以数据的准确性对分析结果影响很大。</p>
<p><img src="/images/2016/pca_principal_component_analysis.png" alt=""></p>
<blockquote>
<p>在PCA中，我们将每个样本看做特征线性空间中的一个向量，左图代表具有三个特征的样本（处于三维空间中，每个特征代表一个维度），通过寻找空间中样本的主成分PC1、PC2，以此建立新的二维线性空间来完成3D到2D的降维。</p>
</blockquote>
<p><a href="http://scikit-learn.org/stable/modules/generated/sklearn.decomposition.PCA.html" target="_blank" rel="external">在使用scikit-learn实现PCA算法</a></p>
<h4 id="ng机器学习课程的例子"><a href="#Ng机器学习课程的例子" class="headerlink" title="Ng机器学习课程的例子"></a>Ng机器学习课程的例子</h4><p>这次Ng的实验中展示了一个使用PCA作为人脸检测预处理的例子，使用的人脸数据看上去是这样的：<br><img src="/images/2016/pca_example_face1.jpg" alt=""><br>每一个人脸图像的分辨率为36*36，每个像素作为一个灰度特征值则我们将每个人脸图片作为一个1024维的样本进行处理，进行PCA降维至100维，映射回原始空间进行可视化得到了下面的效果：<br><img src="/images/2016/pca_example_face2.jpg" alt=""><br>可以观察到非常有趣的结果，虽然经过PCA数据维度降低了非常多，但是人脸的五官还是基本保留了下来（这也形象的说明了“主成分”的意义），对后续的学习算法是一个很好的加速。</p>
<h3 id="ldalinear-discriminant-analysis"><a href="#LDA（Linear-Discriminant-Analysis）" class="headerlink" title="LDA（Linear Discriminant Analysis）"></a>LDA（Linear Discriminant Analysis）</h3><h3 id="lle-locally-linear-embedding-局部线性嵌入"><a href="#LLE-Locally-Linear-Embedding-局部线性嵌入" class="headerlink" title="LLE (Locally Linear Embedding) 局部线性嵌入"></a>LLE (Locally Linear Embedding) 局部线性嵌入</h3>]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
            <category> 机器学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一张图说明白AlphaGo的原理]]></title>
      <url>http://tenstone.me/2016/05/07/machine_learning/%E4%B8%80%E5%BC%A0%E5%9B%BE%E8%AF%B4%E6%98%8E%E7%99%BDAlphaGo%E7%9A%84%E5%8E%9F%E7%90%86/</url>
      <content type="html"><![CDATA[<p><img src="/images/2016/alpha_go_theroy.jpg" alt=""></p>
<p>AlphaGo总体上包含离线学习（图1上半部分）和在线对弈（图1下半部分）两个过程。</p>
<p>离线学习过程分为三个训练阶段。<br>第一阶段：利用3万多幅专业棋手对局的棋谱来训练两个网络。一个是基于全局特征和深度卷积网络（CNN）训练出来的策略网络（Policy Network）。其主要作用是给定当前盘面状态作为输入，输出下一步棋在棋盘其它空地上的落子概率。另一个是利用局部特征和线性模型训练出来的快速走棋策略（Rollout Policy)。策略网络速度较慢，但精度较高；快速走棋策略反之。</p>
<p>第二阶段：利用第t轮的策略网络与先前训练好的策略网络互相对弈，利用增强式学习来修正第t轮的策略网络的参数，最终得到增强的策略网络。这部分被很多“砖”家极大的鼓吹，但实际上应该存在理论上的瓶颈（提升能力有限）。这就好比2个6岁的小孩不断对弈，其水平就会达到职业9段？</p>
<p>第三阶段：先利用普通的策略网络来生成棋局的前U-1步（U是一个属于[1, 450]的随机变量），然后利用随机采样来决定第U步的位置（这是为了增加棋的多样性，防止过拟合）。随后，利用增强的策略网络来完成后面的自我对弈过程，直至棋局结束分出胜负。此后，第U步的盘面作为特征输入，胜负作为label，学习一个价值网络（Value Network），用于判断结果的输赢概率。价值网络其实是AlphaGo的一大创新，围棋最为困难的就是很难根据当前的局势来判断最后的结果，这点职业棋手也很难掌握。通过大量的自我对弈，AlphaGo产生了3000万盘棋局，用作训练学习价值网络。但由于为其的搜索空间太大，3000万盘棋局也不能帮AlphaGo完全攻克这个问题。</p>
<p>在线对弈过程包括以下5个关键步骤：其核心思想实在蒙特卡洛搜索树（MCTS）中嵌入了深度神经网络来减少搜索空间。AlphaGo并没有具备真正的思维能力。</p>
<p>根据当前盘面已经落子的情况提取相应特征；<br>利用策略网络估计出棋盘其他空地的落子概率；<br>根据落子概率来计算此处往下发展的权重，初始值为落子概率本身（如0.18）。实际情况可能是一个以概率值为输入的函数，此处为了理解简便。<br>利用价值网络和快速走棋网络分别判断局势，两个局势得分相加为此处最后走棋获胜的得分。这里使用快速走棋策略是一个用速度来换取量的方法，从被判断的位置出发，快速行棋至最后，每一次行棋结束后都会有个输赢结果，然后综合统计这个节点对应的胜率。而价值网络只要根据当前的状态便可直接评估出最后的结果。两者各有优缺点、互补。<br>利用第四步计算的得分来更新之前那个走棋位置的权重（如从0.18变成了0.12）；此后，从权重最大的0.15那条边开始继续搜索和更新。这些权重的更新过程应该是可以并行的。当某个节点的被访问次数超过了一定的门限值，则在蒙特卡罗树上进一步展开下一级别的搜索（如图2所示）。</p>
<p><img src="/images/2016/alphago_MCTS.jpg" alt=""><br>图2、MCTS拓展下一级节点</p>
<p>AlphaGo的弱点在哪里？<br>攻其策略网络，加大搜索空间。进入中盘后，职业选手如能建立起比较复杂的局面，每一步棋都牵连很多个局部棋的命运（避免单块、局部作战），则AlphaGo需要搜索空间则急剧加大，短时间内得到的解的精度就会大打折扣。李世石九段的第四局棋就有这个意思。此处左右上下共5块黑白棋都相互关联到一起，白1下后，黑棋需要考虑很多地方。很多地方都需要在MCTS上进行跟深入的搜索。为了在一定的时间内有结果，只能放弃搜索精度。</p>
<p><img src="/images/2016/lishishi_alphago_4.jpg" alt=""><br>图3、李世石对AlphaGo第四盘棋棋谱</p>
<p>攻其价值网络，万劫不复：AlphaGo的价值网络极大的提高了之前单纯依靠MCTS来做局势判断的精度，但离准确判断围棋局势还有不小的差距。神经网络还不能完全避免在某些时候出现一些怪异（甚至错误）的判断，更何况其训练样本还远远不足。这也是为什么有了价值网络还仍然需要依靠快速走棋来判断局势。大家都曾经怀疑过AlphaGo的打劫能力，也感觉到了AlphaGo有躲避打劫的迹象。实际上南京大学的周志华教授曾经撰文指出打劫会让价值网络崩溃的问题，原理不再重复。总之打劫要乘早，太晚了搜索空间变小，即便价值网络失效，还可以靠快速走棋网络来弥补。开劫应该以在刚刚进入中盘时期为好（太早劫财还不够），并切保持长时间不消劫，最好在盘面上能同时有两处以上打劫。没有了价值网络的AlphaGo其实水平也就职业3段左右。</p>
]]></content>
      
        <categories>
            
            <category> 机器学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[耐心和等待]]></title>
      <url>http://tenstone.me/2016/05/06/diary/%E8%80%90%E5%BF%83%E5%92%8C%E7%AD%89%E5%BE%85/</url>
      <content type="html"><![CDATA[<p>我们往往急于看到结果，没有耐心，不愿等待。</p>
<p>没有经历过考验的爱情是不长久的；<br>没有磨砺的宝剑是不锋利的。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[金融市场分析模型]]></title>
      <url>http://tenstone.me/2016/05/05/finance/%E9%87%91%E8%9E%8D%E5%B8%82%E5%9C%BA%E5%88%86%E6%9E%90%E6%A8%A1%E5%9E%8B/</url>
      <content type="html"><![CDATA[<h3 id="基于泡沫破裂理论的lppl模型"><a href="#基于泡沫破裂理论的LPPL模型" class="headerlink" title="基于泡沫破裂理论的LPPL模型"></a>基于泡沫破裂理论的LPPL模型</h3><p>LPPL模型认为金融市场处于自组织临界状态，泡沫的产生往往伴随着市场参与者之间行为的正反馈作用，泡沫也会因此越来越大，并在奇点处崩溃。<br><img src="/images/2016/lppl-pic.png" alt=""><br>[1] <a href="/attach/lppl.pdf">国信证券深度报告.PDF</a><br>[2] <a href="http://barrons.blog.caixin.com/archives/24765" target="_blank" rel="external">泡沫熟了</a><br>[3] <a href="http://barrons.blog.caixin.com/archives/85363" target="_blank" rel="external">泡沫又熟了</a></p>
]]></content>
      
        <categories>
            
            <category> 金融 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 金融 </tag>
            
            <tag> 数学模型 </tag>
            
            <tag> 金融预测 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[敬畏 hold in awe and veneration]]></title>
      <url>http://tenstone.me/2016/05/05/diary/%E6%95%AC%E7%95%8F/</url>
      <content type="html"><![CDATA[<blockquote>
<ul>
<li>孔子说：“君子有三畏：畏天命，畏大人．畏圣人之言。”（《论语·季氏》）。朱熹说：“然敬有甚物，只如畏字相似，不是块然兀坐，耳无闻目无见，全不省事之谓，只收敛身心，整齐纯一，不恁地放纵，便是敬。”（《朱子语类》卷12，“持守”）</li>
<li>《圣经》中译文：“敬畏耶和华是智慧的开端”。</li>
<li>《圣经》中译文：“所以我们既得了不能震动的国、就当感恩、照　神所喜悦的、用虔诚敬畏的心事奉神。”</li>
</ul>
</blockquote>
<p><img src="/images/2016/awe-tree.jpg" alt=""><br>所谓神，便是不可以个人之力改变的规律；市场变化、四季轮替、生老病死……<br>敬畏，因为人类无法改变，因为它专治各种不服。</p>
<p>敬畏之心让人变得谦卑、谨慎和小心翼翼。<br>敬畏市场，是因为市场可以纤毫毕现的折射出你人性的影子，有敬畏才能知止。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 哲学 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[常用Python库收集]]></title>
      <url>http://tenstone.me/2016/05/04/tech/%E5%B8%B8%E7%94%A8Python%E5%BA%93/</url>
      <content type="html"><![CDATA[<h3 id="科学计算-amp-数据分析"><a href="#科学计算-amp-数据分析" class="headerlink" title="科学计算 &amp; 数据分析"></a>科学计算 &amp; 数据分析</h3><ol>
<li><h4 id="matplotlib"><a href="#matplotlib" class="headerlink" title="matplotlib"></a><a href="http://matplotlib.org/" target="_blank" rel="external">matplotlib</a></h4>最著名的绘图库，它提供了一整套和matlab相似的命令API，十分适合交互式地行制图。而且也可以方便地将它作为绘图控件，嵌入GUI应用程序中。</li>
<li><h4 id="scikit-learn"><a href="#scikit-learn" class="headerlink" title="scikit-learn"></a><a href="http://scikit-learn.org/stable/" target="_blank" rel="external">scikit-learn</a></h4>为用户提供各种机器学习算法接口，可以让用户简单、高效地进行数据挖掘和数据分析。</li>
<li><h4 id="scrapy"><a href="#Scrapy" class="headerlink" title="Scrapy"></a><a href="http://scrapy.org/" target="_blank" rel="external">Scrapy</a></h4>An open source and collaborative framework for extracting the data you need from websites.<br>In a fast, simple, yet extensible way.</li>
<li><h4 id="tensorflow"><a href="#TensorFlow" class="headerlink" title="TensorFlow"></a><a href="http://tensorflow.org/" target="_blank" rel="external">TensorFlow</a></h4></li>
<li><h4 id="ipython-notebook"><a href="#ipython-notebook" class="headerlink" title="ipython notebook"></a><a href="http://jupyter.org/" target="_blank" rel="external">ipython notebook</a></h4>The Jupyter Notebook is a web application that allows you to create and share documents that contain live code, equations, visualizations and explanatory text. Uses include: data cleaning and transformation, numerical simulation, statistical modeling, machine learning and much more.</li>
<li><h4 id="nltk"><a href="#NLTK" class="headerlink" title="NLTK"></a><a href="http://www.nltk.org/" target="_blank" rel="external">NLTK</a></h4>NLTK is a leading platform for building Python programs to work with human language data.</li>
<li><h4 id="scipy"><a href="#SciPy" class="headerlink" title="SciPy"></a><a href="https://www.scipy.org/" target="_blank" rel="external">SciPy</a></h4>SciPy包含的模块有最优化、线性代数、积分、插值、特殊函数、快速傅里叶变换、信号处理和图像处理、常微分方程求解和其他科学与工程中常用的计算。</li>
</ol>
]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
            <tag> Python库 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[机器学习相关算法总结]]></title>
      <url>http://tenstone.me/2016/05/03/machine_learning/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%9B%B8%E5%85%B3%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<p>从Quantitative Modeling的角度来说，有两大主流的方向：Stochastic Calculus（随机微积分）和Statistical Learning（统计学习）。</p>
<p>机器学习的常用方法，主要分为有监督学习(supervised learning)和无监督学习(unsupervised learning)。监督学习，就是人们常说的分类，通过已有的训练样本（即已知数据以及其对应的输出）去训练得到一个最优模型（这个模型属于某个函数的集合，最优则表示在某个评价准则下是最佳的），再利用这个模型将所有的输入映射为相应的输出，对输出进行简单的判断从而实现分类的目的，也就具有了对未知数据进行分类的能力。<br><img src="/images/2016/machine_learning_algorithms.png" alt=""></p>
<h3 id="决策树-decision-tree"><a href="#决策树-Decision-tree" class="headerlink" title="决策树 (Decision tree)"></a><a href="https://zh.wikipedia.org/wiki/%E5%86%B3%E7%AD%96%E6%A0%91" target="_blank" rel="external">决策树 (Decision tree)</a></h3><p>机器学习中，决策树是一个预测模型；他代表的是对象属性与对象值之间的一种映射关系。树中每个节点表示某个对象，而每个分叉路径则代表的某个可能的属性值，而每个叶结点则对应从根节点到该叶节点所经历的路径所表示的对象的值。决策树仅有单一输出，若欲有复数输出，可以建立独立的决策树以处理不同输出。<br><img src="/images/2016/decision_tree.png" alt=""></p>
<h3 id="k-近邻算法-k-nearest-neighbors-knn"><a href="#K-近邻算法-K-nearest-neighbors-KNN" class="headerlink" title="K-近邻算法 (K-nearest neighbors, KNN)"></a><a href="https://zh.wikipedia.org/wiki/%E6%9C%80%E8%BF%91%E9%84%B0%E5%B1%85%E6%B3%95" target="_blank" rel="external">K-近邻算法 (K-nearest neighbors, KNN)</a></h3><p>在模式识别领域中，最近邻居法（KNN算法，又译K-近邻算法）是一种用于分类和回归的非参数统计方法。在这两种情况下，输入包含特征空间中的k个最接近的训练样本。<br><img src="/images/2016/knn_algorithm.png" alt=""></p>
<h3 id="朴素贝叶斯分类器naive-bayes-classifier"><a href="#朴素贝叶斯分类器（Naive-Bayes-classifier）" class="headerlink" title="朴素贝叶斯分类器（Naive Bayes classifier）"></a><a href="https://zh.wikipedia.org/wiki/%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF%E5%88%86%E7%B1%BB%E5%99%A8" target="_blank" rel="external">朴素贝叶斯分类器（Naive Bayes classifier）</a></h3><p>在机器学习中，朴素贝叶斯分类器是一系列以假设特征之间强（朴素）独立下运用贝叶斯定理为基础的简单概率分类器。<br><img src="/images/2016/nlp-naive-bayes.jpg" alt=""></p>
<h3 id="逻辑回归-logistic-regression"><a href="#逻辑回归-Logistic-regression" class="headerlink" title="逻辑回归 (Logistic regression)"></a><a href="https://zh.wikipedia.org/wiki/%E9%82%8F%E8%BC%AF%E8%BF%B4%E6%AD%B8" target="_blank" rel="external">逻辑回归 (Logistic regression)</a></h3><p>logistic回归又称logistic回归分析，是一种广义的线性回归分析模型，常用于数据挖掘，疾病自动诊断，经济预测等领域。例如，探讨引发疾病的危险因素，并根据危险因素预测疾病发生的概率等。<br><img src="/images/2016/logistic_linear_regression_compare.png" alt=""><br><img src="/images/2016/logistic_sigmoid_function.png" alt=""></p>
<h3 id="支持向量机svm"><a href="#支持向量机-SVM" class="headerlink" title="支持向量机(SVM)"></a><a href="https://zh.wikipedia.org/wiki/%E6%94%AF%E6%8C%81%E5%90%91%E9%87%8F%E6%9C%BA" target="_blank" rel="external">支持向量机(SVM)</a></h3><p>支持向量机属于一般化线性分类器，也可以被认为是提克洛夫规范化（Tikhonov Regularization）方法的一个特例。这族分类器的特点是他们能够同时最小化经验误差与最大化几何边缘区，因此支持向量机也被称为最大边缘区分类器。<br><img src="/images/2016/svm_classifier.png" alt=""></p>
<h3 id="随机森林-random-forest"><a href="#随机森林-Random-Forest" class="headerlink" title="随机森林 (Random Forest)"></a><a href="https://zh.wikipedia.org/wiki/%E9%9A%8F%E6%9C%BA%E6%A3%AE%E6%9E%97" target="_blank" rel="external">随机森林 (Random Forest)</a></h3><p>在机器学习中，随机森林是一个包含多个决策树的分类器，并且其输出的类别是由个别树输出的类别的众数而定。Leo Breiman和Adele Cutler发展出推论出随机森林的算法。<br><img src="/images/2016/random_forest.gif" alt=""><br>[1] <a href="http://blog.datadive.net/random-forest-interpretation-with-scikit-learn/" target="_blank" rel="external">random forest interpretation with scikit-learn</a> <a href="http://www.csdn.net/article/2015-10-08/2825851" target="_blank" rel="external">[译文]</a><br>[2] <a href="http://datartisan.com/article/detail/42.html" target="_blank" rel="external">随机森林入门攻略</a><br>[3] <a href="http://blog.itpub.net/12199764/viewspace-1572056/" target="_blank" rel="external">示例解析：sklearn中的随机森林算法RandomForestClassifier</a></p>
<h3 id="感知器-perceptron"><a href="#感知器-Perceptron" class="headerlink" title="感知器 (Perceptron)"></a><a href="https://zh.wikipedia.org/wiki/%E6%84%9F%E7%9F%A5%E5%99%A8" target="_blank" rel="external">感知器 (Perceptron)</a></h3><p>Frank Rosenblatt在1957年就职于Cornell航空实验室（Cornell Aeronautical Laboratory）时所发明的一种人工神经网络。它可以被视为一种最简单形式的前馈神经网络，是一种二元线性分类器。<br><img src="/images/2016/perceptron_neural_network.png" alt=""></p>
<h3 id="人工神经网络-artificial-neural-network-ann"><a href="#人工神经网络-artificial-neural-network-ANN" class="headerlink" title="人工神经网络 (artificial neural network, ANN)"></a><a href="https://zh.wikipedia.org/wiki/%E4%BA%BA%E5%B7%A5%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C" target="_blank" rel="external">人工神经网络 (artificial neural network, ANN)</a></h3><p>现代神经网络是一种非线性统计性数据建模工具，常用来对输入和输出间复杂的关系进行建模，或用来探索数据的模式。神经网络是一种运算模型，由大量的节点（或称“神经元”，或“单元”）和之间相互联接构成。每个节点代表一种特定的输出函数，称为激励函数（activation function）。<br><img src="/images/2016/neural-network.png" alt=""></p>
<h3 id="深度神经网络-deep-neuron-networks-dnn"><a href="#深度神经网络-deep-neuron-networks-DNN" class="headerlink" title="深度神经网络 (deep neuron networks, DNN)"></a><a href="https://zh.wikipedia.org/wiki/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0" target="_blank" rel="external">深度神经网络 (deep neuron networks, DNN)</a></h3><p>是一种具备至少一个隐层的神经网络。与浅层神经网络类似，深度神经网络也能够为复杂非线性系统提供建模，但多出的层次为模型提供了更高的抽象层次，因而提高了模型的能力。深度神经网络通常都是前馈神经网络，但也有语言建模等方面的研究将其拓展到递归神经网络。<br><img src="/images/deep_neural_network.png" alt="Understanding LSTM Networks"></p>
<h3 id="循环神经网络-recurrent-neural-networks-rnn"><a href="#循环神经网络-Recurrent-Neural-Networks-RNN" class="headerlink" title="循环神经网络 (Recurrent Neural Networks, RNN)"></a><a href="https://zh.wikipedia.org/wiki/%E9%80%92%E5%BD%92%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C" target="_blank" rel="external">循环神经网络 (Recurrent Neural Networks, RNN)</a></h3><p>递归神经网络（RNN）是两种人工神经网络的总称。一种是时间递归神经网络（recurrent neural network），另一种是结构递归神经网络（recursive neural network）。时间递归神经网络的神经元间连接构成有向图，而结构递归神经网络利用相似的神经网络结构递归构造更为复杂的深度网络。RNN一般指代时间递归神经网络。单纯递归神经网络因为无法处理随着递归，权重指数级爆炸或消失的问题（Vanishing gradient problem），难以捕捉长期时间关联；而结合不同的LSTM可以很好解决这个问题。<br><img src="/images/2016/sample_of_rnn_network.png" alt=""><br>[1]<a href="http://colah.github.io/posts/2015-08-Understanding-LSTMs/" target="_blank" rel="external">Understanding LSTMs</a><br>[2]<a href="https://zh.wikipedia.org/wiki/LSTM" target="_blank" rel="external">长短记忆人工神经网络(LSTM)</a></p>
<h3 id="卷积神经网络-convolutional-neuron-networkscnn"><a href="#卷积神经网络-convolutional-neuron-networks，CNN" class="headerlink" title="卷积神经网络 (convolutional neuron networks，CNN)"></a><a href="https://zh.wikipedia.org/wiki/%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C" target="_blank" rel="external">卷积神经网络 (convolutional neuron networks，CNN)</a></h3><p>由一个或多个卷积层和顶端的全连通层（对应经典的神经网络）组成，同时也包括关联权重和池化层（pooling layer）。这一结构使得卷积神经网络能够利用输入数据的二维结构。与其他深度学习结构相比，卷积神经网络在图像和语音识别方面能够给出更优的结果。<br><img src="/images/2016/cnn_architecture.jpg" alt=""></p>
<h3 id="梯度下降法-gradient-descent"><a href="#梯度下降法-Gradient-descent" class="headerlink" title="梯度下降法 (Gradient descent)"></a><a href="https://zh.wikipedia.org/wiki/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E6%B3%95" target="_blank" rel="external">梯度下降法 (Gradient descent)</a></h3><p>是一个最优化算法，通常也称为最速下降法，常用于机器学习和人工智能当中用来递归性地逼近最小偏差模型。<br><img src="/images/2016/gradient_descent.png" alt=""></p>
<p>[1] <a href="http://www.pyimagesearch.com/2014/06/09/get-deep-learning-bandwagon-get-perspective/" target="_blank" rel="external">Get off the deep learning bandwagon and get some perspective</a><br>[2] <a href="https://azure.microsoft.com/en-us/documentation/articles/machine-learning-algorithm-choice/" target="_blank" rel="external">How to choose algorithms for Microsoft Azure Machine Learning</a><br>[3] <a href="http://pan.baidu.com/s/1o8ktHn8" target="_blank" rel="external">斯坦福大学机器学习公开课</a> 密码: a95n<br>[4] <a href="https://en.wikipedia.org/wiki/List_of_machine_learning_concepts" target="_blank" rel="external">List of machine learning concepts</a><br>[5] <a href="http://www.cs.waikato.ac.nz/ml/index.html" target="_blank" rel="external">Machine Learning GUI Software Weka</a><br>[6] <a href="http://blog.csdn.net/xbinworld/article/details/44464663" target="_blank" rel="external">CSDN xbinworld研究机器学习算法的博文</a></p>
]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
            <category> 机器学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 金融 </tag>
            
            <tag> 金融预测 </tag>
            
            <tag> 算法 </tag>
            
            <tag> 机器学习 </tag>
            
            <tag> 数据挖掘 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[大空头电影观后感]]></title>
      <url>http://tenstone.me/2016/05/02/diary/%E5%A4%A7%E7%A9%BA%E5%A4%B4%E7%94%B5%E5%BD%B1%E8%A7%82%E5%90%8E%E6%84%9F/</url>
      <content type="html"><![CDATA[<blockquote>
<p>让你遇到麻烦的不是未知，而是你确信的事并非如你所想 —— 马克 吐温<br>“The Big Short“–《大空头》一部再现2008金融危机的好片子。<br>文章大部分吸收自知乎<a href="https://www.zhihu.com/question/39012069" target="_blank" rel="external">如何评价电影《大空头》的专业性？</a>，本人对金融市场不甚了解。</p>
</blockquote>
<h3 id="金融危机"><a href="#金融危机" class="headerlink" title="金融危机"></a>金融危机</h3><p>金融危机是财富重新分配的极端形式。你见过狼比羊多的草原吗？无论是股市、汇市、期货市场，大部分人亏损输钱这个市场才能正常运转下去。即便是在极为温柔的A股，股民作为 一个群体整体而言是70%的人亏损，20%的微利，10%的人赚大钱。而在金融危机期间，99%的人亏损，剩下的1%的人凭借着出色的耐心和勇气预见到了危机的到来和深入，并且跟随趋势赚取了惊人的财富。</p>
<p>当牛市的音乐会突然停止了，可不要指望市场有秩序地下跌。下跌市场中，光多头踩踏足以让大部分人损失惨重，主动做空赚钱的空头更多的是一种顺势而为的获利姿态。金融危机总是以迅速、彻底的暴跌展现它的破坏性和无序性。<br><img src="/images/2016/usa_stock_chart_example.png" alt=""><br>上图是上一轮美国股市（标普500指数）从牛市到熊市的整个过程。2003-2007年4年的辛苦上涨在08年一年全部灰飞烟灭。有过一定市场经验的投资者大多明白，短时间内价格朝着单一方向大幅波动会产生巨大的利润，金融危机是短时间获取暴利的最佳试验场。那么08年90%以上的投资者亏损了，谁赚钱了呢？</p>
<h3 id="劣质金融产品的范例"><a href="#劣质金融产品的范例" class="headerlink" title="劣质金融产品的范例"></a>劣质金融产品的范例</h3><p>电影中还用世界顶级大厨处理法式大餐食材的例子，解释了CDO：大厨把放了3天前剩下的鱼肉，炖了一锅海鲜汤。于是已经放了3天的劣质食材，摇身一变，成了一道受欢迎的新菜～一锅热腾腾的CDO～<br><img src="/images/2016/cdo_example1.png" alt=""><br><img src="/images/2016/cdo_example2.png" alt=""></p>
<p>市场的无情、贪婪、残酷，没有足够的知识、胆识和耐心，无法与之共舞。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 金融 </tag>
            
            <tag> 观后感 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[江湖就是人情世故]]></title>
      <url>http://tenstone.me/2016/05/02/diary/%E6%B1%9F%E6%B9%96%E5%B0%B1%E6%98%AF%E4%BA%BA%E6%83%85%E4%B8%96%E6%95%85/</url>
      <content type="html"><![CDATA[<blockquote>
<p>不知你还记得徐老怪的《笑傲江湖》那个经典桥段：在熊熊燃烧柴火旁边，任我行对着退隐江湖之心的令狐冲说，有人的地方就有江湖，你如何能退出？<br>张作霖：儿子，什么是江湖？江湖,就是人情世故,能应对已属不易,懂全了那是不可能的。</p>
</blockquote>
<p>古人口中的江湖，就是现在的社会。要照顾到别人，分配好利益，还要保护好别人之间的关系。作为一个不谙世事的新青年，还有很多功课要做。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[量化投资策略总结]]></title>
      <url>http://tenstone.me/2016/05/01/finance/%E9%87%8F%E5%8C%96%E6%8A%95%E8%B5%84%E7%AD%96%E7%95%A5%E6%80%BB%E7%BB%93/</url>
      <content type="html"><![CDATA[<h3 id="风险规避"><a href="#风险规避" class="headerlink" title="风险规避"></a>风险规避</h3><ol>
<li>崩盘前（中期趋势见顶）逃离（LPPL）</li>
<li>偶然性事件是不可避免的，唯一的应对方法就是分仓（不同行业、板块）</li>
<li>保持对市场的敬畏，知适可而止</li>
<li>永远不碰大烂臭（市盈率、市净率）</li>
</ol>
<h3 id="时变的市场"><a href="#时变的市场" class="headerlink" title="时变的市场"></a>时变的市场</h3><ol>
<li>市场是不断进化的，基于某一阶段内的历史数据对未来的预测是不合理的，因此预测模型也要时变更新（每个时间的模型只适用于当时）</li>
<li>即便是同一时段，对于不同概念（蓝筹、小市值）主力控盘习惯也有不同，也许区别对待</li>
<li>当一个赚钱的策略广为人知的时候，策略就会失效（被消化掉了）</li>
</ol>
<h3 id="特征构建"><a href="#特征构建" class="headerlink" title="特征构建"></a>特征构建</h3><ol>
<li>牛市or熊市的基本判断</li>
</ol>
<p>商品期货行情：博易大师、顺赢云</p>
]]></content>
      
        <categories>
            
            <category> 金融 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 金融 </tag>
            
            <tag> 量化投资 </tag>
            
            <tag> 金融预测 </tag>
            
            <tag> 总结 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[基于Cordova的APP混合开发]]></title>
      <url>http://tenstone.me/2016/04/29/job/%E5%9F%BA%E4%BA%8ECordova%E7%9A%84APP%E6%B7%B7%E5%90%88%E5%BC%80%E5%8F%91/</url>
      <content type="html"><![CDATA[<p>原生开发太贵了，如果并非对APP要求较高的C端产品，混合开发已经足够。技术选型时决定使用<a href="http://ngcordova.com/" target="_blank" rel="external">ngCordova</a>和<a href="http://ionicframework.com/" target="_blank" rel="external">ionic Framework</a>。该方案的缺点是：在性能较差的安卓机VIEW渲染效果较差。<a href="https://cordova.apache.org" target="_blank" rel="external">Cordova</a>自定义插件你调用原生lib类库通过js传递给java就行了。</p>
<p><img src="/images/2016/ionic-developing-mobile-apps-for-the-real-world-daniel-comas-4-638.jpg" alt=""></p>
<p><strong>关于Cordova集成第三方SDK的参考</strong>:</p>
<ul>
<li><a href="http://cordova.apache.org/docs/en/3.6.0/guide/hybrid/plugins/index.html" target="_blank" rel="external">官方文档：Android Platform Guide</a></li>
<li><a href="http://ionichina.com/topic/55368e249ee76e05064d4b11" target="_blank" rel="external">http://ionichina.com/topic/55368e249ee76e05064d4b11</a></li>
<li><a href="https://forum.ionicframework.com/t/calling-native-code-sdks-from-ionic/12748" target="_blank" rel="external">https://forum.ionicframework.com/t/calling-native-code-sdks-from-ionic/12748</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 工作预研 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> APP开发 </tag>
            
            <tag> Cordova </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[智能客服机器人，旅游翻译技术方案]]></title>
      <url>http://tenstone.me/2016/04/28/job/%E6%99%BA%E8%83%BD%E5%AE%A2%E6%9C%8D%E6%9C%BA%E5%99%A8%E4%BA%BA%E3%80%81%E6%97%85%E6%B8%B8%E7%BF%BB%E8%AF%91%E6%8A%80%E6%9C%AF%E6%96%B9%E6%A1%88/</url>
      <content type="html"><![CDATA[<h3 id="客服机器人"><a href="#客服机器人" class="headerlink" title="客服机器人"></a>客服机器人</h3><h4 id="已成熟的聊天机器人项目"><a href="#已成熟的聊天机器人项目" class="headerlink" title="已成熟的聊天机器人项目"></a>已成熟的聊天机器人项目</h4><p>国内：<a href="http://www.tuling123.com/" target="_blank" rel="external">图灵机器人</a>、<a href="https://github.com/wong2/xiaohuangji" target="_blank" rel="external">小黄鸡</a>、<a href="http://www.ju-zi.com/" target="_blank" rel="external">微群管家</a><br>国外：<a href="https://hubot.github.com/" target="_blank" rel="external">Github HUBOT</a><br>相关项目：<a href="https://github.com/liuwons/wxBot" target="_blank" rel="external">wxBot</a><br>图灵测试（英语：Turing test，又译图灵试验）是图灵于1950年提出的一个关于判断机器是否能够思考的著名试验，测试某机器是否能表现出与人等价或无法区分的智能。测试的谈话仅限于使用唯一的文本管道，例如计算机键盘和屏幕，这样的结果是不依赖于计算机把单词转换为音频的能力。<br>备选方案：PyAIML</p>
<h4 id="旅行翻译"><a href="#旅行翻译" class="headerlink" title="旅行翻译"></a>旅行翻译</h4><p>语言是出境游的大障碍，翻译在出境游中属刚需；出于产品易用性和及时性角度的考虑，将采用语音翻译为主+TTS的方式。<br>参照微软语音翻译实现步骤：<br><img src="/images/2016/Speech_API_flow.png" alt=""><br>针对汉语语境特征，首选<a href="http://www.xfyun.cn/" target="_blank" rel="external">科大讯飞</a>完成语音识别和TTS的动作；<br>翻译接口采用Google Translator API或Bing Translator API。</p>
<p>试了一下百度翻译，太中式了(┬＿┬)</p>
]]></content>
      
        <categories>
            
            <category> 工作预研 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 聊天机器人 </tag>
            
            <tag> 人工智能 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[智能行程设计技术方案研究]]></title>
      <url>http://tenstone.me/2016/04/28/job/%E6%99%BA%E8%83%BD%E8%A1%8C%E7%A8%8B%E8%AE%BE%E8%AE%A1%E6%8A%80%E6%9C%AF%E5%82%A8%E5%A4%87/</url>
      <content type="html"><![CDATA[<p>智能行程设计对出境游的重要性就不说了，通过人工智能完成行程设计是不二之选。所有的智能规划建立在数据之上，因此先要有一个全面、数据准确的景点、产品库之上，除此之外对每次规划结果收集，进而反馈优化行程规划的算法也很重要，因此要分几个层次来讨论这个问题。<br><img src="/images/2016/tailor-made.jpg" alt=""></p>
<h3 id="数据收集"><a href="#数据收集" class="headerlink" title="数据收集"></a>数据收集</h3><ul>
<li>景点属性：亲子、冒险、情侣、美食……，对每个属性评分并且不断的人工维护和优化</li>
<li>游玩时间：一天的游玩时间的规划分配 </li>
<li>地理坐标：车接送、景点选择</li>
<li>游玩时间：按分钟计算</li>
</ul>
<h3 id="用户需求"><a href="#用户需求" class="headerlink" title="用户需求"></a>用户需求</h3><ul>
<li>游玩人数：成人、儿童</li>
<li>游玩特征：亲子、情侣、朋友、一个人</li>
<li>游玩偏好：情侣、美食，（按选择顺序设定权重）</li>
<li>游玩时间：几点到几点，打算几点吃饭</li>
<li>起点终点：用于考虑规划的距离</li>
</ul>
<h3 id="智能行程规划计算"><a href="#智能行程规划（计算）" class="headerlink" title="智能行程规划（计算）"></a>智能行程规划（计算）</h3><ul>
<li>推荐算法：基于景点基础数据、用户需求特征的推荐，此类方法较多，比如：分类、聚类、关联</li>
<li>蒙罗卡特搜索树（简称：MCTS）：是一种用于某些决策过程的启发式搜索算法，最引人注目的是在游戏中的使用。一个主要例子是电脑围棋程序，它也用于其他棋盘游戏、即时电子游戏以及不确定性游戏，击败李世石的AlphaGo采用的就是这个算法。在项目中实现路线规划的功能。</li>
</ul>
<h3 id="结果集"><a href="#结果集" class="headerlink" title="结果集"></a>结果集</h3><ul>
<li>基于时间线的可玩点集合：通过算法优化，能够即使相应用户请求。因为算法的随机性，在具有足够基础数据的情况下，每次规划的结果也会不同。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 工作预研 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 人工智能 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[概率统计分析方法]]></title>
      <url>http://tenstone.me/2016/04/28/machine_learning/%E6%A6%82%E7%8E%87%E7%BB%9F%E8%AE%A1%E5%88%86%E6%9E%90%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>最近在研究机器学习，大学时期作为一个特立独行的差等生一直以为数学不重要以后也用不到，现在发现我错了，好多概念都仅仅是听说过啊…一点印象都没有。现在写一个总结，以备不时之需。</p>
<p>[主要应用方向]：金融数据的统计学分析、蒙罗卡特方法实现智能行程设计</p>
<h3 id="最小二乘法-least-square-method"><a href="#最小二乘法-least-square-method" class="headerlink" title="最小二乘法 (least square method)"></a><a href="https://zh.wikipedia.org/wiki/%E6%9C%80%E5%B0%8F%E4%BA%8C%E4%B9%98%E6%B3%95" target="_blank" rel="external">最小二乘法 (least square method)</a></h3><p>利用最小二乘法可以简便地求得未知的数据，并使得这些求得的数据与实际数据之间误差的平方和为最小。最小二乘法还可用于曲线拟合。其他一些优化问题也可通过最小化能量或最大化熵用最小二乘法来表达。</p>
<h3 id="最大似然估计-maximum-likelihood-estimation"><a href="#最大似然估计-maximum-likelihood-estimation" class="headerlink" title="最大似然估计 (maximum likelihood estimation)"></a><a href="https://zh.wikipedia.org/wiki/%E6%9C%80%E5%A4%A7%E4%BC%BC%E7%84%B6%E4%BC%B0%E8%AE%A1" target="_blank" rel="external">最大似然估计 (maximum likelihood estimation)</a></h3><p>在统计学中，最大似然估计，也称为最大概似估计，是用来估计一个概率模型的参数的一种方法。</p>
<h3 id="数学期望-mathematical-expectation"><a href="#数学期望-Mathematical-expectation" class="headerlink" title="数学期望 (Mathematical expectation)"></a><a href="https://zh.wikipedia.org/wiki/%E6%9C%9F%E6%9C%9B%E5%80%BC" target="_blank" rel="external">数学期望 (Mathematical expectation)</a></h3><p>在概率论和统计学中，一个离散性随机变量的期望值（或数学期望、或均值，亦简称期望，物理学中称为期待值）是试验中每次可能结果的概率乘以其结果的总和。换句话说，期望值是随机试验在同样的机会下重复多次的结果计算出的等同“期望”的平均值。需要注意的是，期望值并不一定等同于常识中的“期望”——“期望值”也许与每一个结果都不相等。（换句话说，期望值是该变量输出值的平均数。期望值并不一定包含于变量的输出值集合里。）</p>
<h3 id="泊松分布-poisson-distribution"><a href="#泊松分布-Poisson-distribution" class="headerlink" title="泊松分布 (Poisson distribution)"></a><a href="https://zh.wikipedia.org/wiki/%E6%B3%8A%E6%9D%BE%E5%88%86%E4%BD%88" target="_blank" rel="external">泊松分布 (Poisson distribution)</a></h3><p>适合于描述单位时间内随机事件发生的次数的概率分布。如某一服务设施在一定时间内受到的服务请求的次数，电话交换机接到呼叫的次数、汽车站台的候客人数、机器出现的故障数、自然灾害发生的次数、DNA序列的变异数、放射性原子核的衰变数等等。<br><img src="/images/2016/poisson_distribution.gif" alt=""><br>泊松回归（英语：Poisson regression）是用来为计数资料和列联表建模的一种回归分析。泊松回归假设反应变量Y是泊松分布，并假设它期望值的对数可由一组未知参数进行线性表达。当其用于列联表分析时，泊松回归模型也被称作对数-线性模型。</p>
<h3 id="正态分布-normal-distribution"><a href="#正态分布-normal-distribution" class="headerlink" title="正态分布 (normal distribution)"></a><a href="https://zh.wikipedia.org/wiki/%E6%AD%A3%E6%80%81%E5%88%86%E5%B8%83" target="_blank" rel="external">正态分布 (normal distribution)</a></h3><p>是一个在数学、物理及工程等领域都非常重要的概率分布，由于这个分布函数具有很多非常漂亮的性质，使得其在诸多涉及统计科学离散科学等领域的许多方面都有着重大的影响力。<br><img src="/images/2016/normal_distribution.jpg" alt=""></p>
<h3 id="蒙特卡罗法-monte-carlo-method"><a href="#蒙特卡罗法-Monte-Carlo-method" class="headerlink" title="蒙特卡罗法 (Monte Carlo method)"></a><a href="https://zh.wikipedia.org/wiki/%E8%92%99%E5%9C%B0%E5%8D%A1%E7%BE%85%E6%96%B9%E6%B3%95" target="_blank" rel="external">蒙特卡罗法 (Monte Carlo method)</a></h3><p>一个用Excel实现蒙罗卡特方法的栗子：<br><a href="https://www.zhihu.com/question/28022345/answer/39067354" target="_blank" rel="external">https://www.zhihu.com/question/28022345/answer/39067354</a><br><img src="/images/2016/monte_carlo_paths_in_matlab.jpg" alt=""><br>蒙特卡罗方法又称统计模拟法、随机抽样技术，是一种随机模拟方法，以概率和统计理论方法为基础的一种计算方法，是使用随机数（或更常见的伪随机数）来解决很多计算问题的方法。将所求解的问题同一定的概率模型相联系，用电子计算机实现统计模拟或抽样，以获得问题的近似解。为象征性地表明这一方法的概率统计特征，故借用赌城蒙特卡罗命名。</p>
<h4 id="相关概念蒙特卡洛树搜索"><a href="#相关概念：蒙特卡洛树搜索" class="headerlink" title="相关概念：蒙特卡洛树搜索"></a>相关概念：<a href="https://zh.wikipedia.org/wiki/%E8%92%99%E7%89%B9%E5%8D%A1%E6%B4%9B%E6%A0%91%E6%90%9C%E7%B4%A2" target="_blank" rel="external">蒙特卡洛树搜索</a></h4><p> 蒙特卡洛树搜索（英语：Monte Carlo tree search；简称：MCTS）是一种用于某些决策过程的启发式搜索算法，最引人注目的是在游戏中的使用。一个主要例子是电脑围棋程序，它也用于其他棋盘游戏、即时电子游戏以及不确定性游戏。</p>
<h3 id="随机过程-stochastic-processes"><a href="#随机过程-stochastic-processes" class="headerlink" title="随机过程 (stochastic processes)"></a><a href="https://zh.wikipedia.org/wiki/%E9%9A%8F%E6%9C%BA%E8%BF%87%E7%A8%8B" target="_blank" rel="external">随机过程 (stochastic processes)</a></h3><p>随机过程是随机变量的集合。若一随机系统的样本点是随机函数，则称此函数为样本函数，这一随机系统全部样本函数的集合是一个随机过程。实际应用中，样本函数的一般定义在时间域或者空间域。随机过程的实例如股票和汇率的波动、语音信号、视频信号、体温的变化，反对法随机运动如布朗运动、随机徘徊等等。<br><img src="/images/2016/stochastic_processes.png" alt=""></p>
<h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><blockquote>
<p>随机过程<br>泊松过程 Poisson processes<br>更新过程 renewal processes<br>布朗运动 Brownian motion<br>仿射（跳跃）扩散过程 affine processes (or affine-jump diffusions)<br>列维过程 Levy processes<br>连续状态分枝过程 continuous state branching processes<br>随机微分方程 stochastic differential equations<br>半鞅 semimartingale<br>偏微分方程 partial differential equations<br>偏积分－微分方程 partial integro-differential equations<br>倒向随机微分方程 backward stochastic differential equations<br>二阶倒向随机微分方程 second order backward stochastic differential equations<br>随机偏微分方程 stochastic partial differential equations<br>随机最优控制 stochastic optimal control<br>极值建模 modeling of extremes<br>风险度量 risk measures<br>蒙特卡洛模拟 Monte Carlo simulation</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
            <category> 机器学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 金融预测 </tag>
            
            <tag> 算法 </tag>
            
            <tag> 机器学习 </tag>
            
            <tag> 数学 </tag>
            
            <tag> Excel </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[科技主导经济形态]]></title>
      <url>http://tenstone.me/2016/04/06/startup/%E7%A7%91%E6%8A%80%E4%B8%BB%E5%AF%BC%E7%BB%8F%E6%B5%8E%E5%BD%A2%E6%80%81/</url>
      <content type="html"><![CDATA[<p>AlphaGo战胜李世石后，人工智能突然火了起来，酝酿着一波人工智能的浪潮。这个时代是科技主导的，科技趋势代表未来价值趋势。Google开源了Tensorflow，微软开源了Caffe，这些人工神经网络的技术方案的普及，深度学习在量化投资领域的应用越来越广泛。</p>
<p>人工智能的出现，类似于工业革命的蒸汽机，不同的是，AI解放的是脑力。我总以为，科技的发展是有尽头的，现在发现不然。科技将永远进步并促进和影响人类社会经济形态的发展，所以坚定不移的坚持选择科技是正确的。</p>
]]></content>
      
        <categories>
            
            <category> 生活随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> AI </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Linux进程前后台切换]]></title>
      <url>http://tenstone.me/2016/03/22/tech/Linux%E8%BF%9B%E7%A8%8B%E5%89%8D%E5%90%8E%E5%8F%B0%E5%88%87%E6%8D%A2/</url>
      <content type="html"><![CDATA[<p>Linux中前后台进程相关的命令：</p>
<pre><code>command &amp;   // 将进程放在后台执行
ctrl-z      // 暂停当前进程 并放入后台
jobs        // 查看当前后台任务
bg          // 将任务转为后台执行
fg          // 将任务调回前台
kill        // 杀掉任务
</code></pre><p>假设你发现前台运行的一个程序需要很长的时间，但是需要干其他的事情，你就可以用 Ctrl-Z ，挂起这个程序，然后可以看到系统提示：<br>[1]+ Stopped /root/bin/rsync.sh<br>然后我们可以把程序调度到后台执行：（bg 后面的数字为作业号）</p>
<p>###　bg 1<br>[1]+ /root/bin/rsync.sh &amp;<br>用 jobs 命令查看正在运行的任务：</p>
<h3 id="jobs"><a href="#jobs" class="headerlink" title="jobs"></a>jobs</h3><p>[1]+ Running /root/bin/rsync.sh &amp;<br>如果想把它调回到前台运行，可以用</p>
<h3 id="fg-1"><a href="#fg-1" class="headerlink" title="fg 1"></a>fg 1</h3><p>/root/bin/rsync.sh<br>这样，你在控制台上就只能等待这个任务完成了。</p>
<h2 id="ssh关闭时让进程在后台可靠运行"><a href="#SSH关闭时，让进程在后台可靠运行" class="headerlink" title="SSH关闭时，让进程在后台可靠运行"></a>SSH关闭时，让进程在后台可靠运行</h2><p><a href="https://www.ibm.com/developerworks/cn/linux/l-cn-nohup/" target="_blank" rel="external">Linux 技巧：让进程在后台可靠运行的几种方法</a><br>nohup 无疑是我们首先想到的办法。顾名思义，nohup 的用途就是让提交的命令忽略 hangup 信号。让我们先来看一下 nohup 的帮助信息：<br>NOHUP(1)                        User Commands                        NOHUP(1)</p>
<p>NAME<br>       nohup - run a command immune to hangups, with output to a non-tty</p>
<p>SYNOPSIS<br>       nohup COMMAND [ARG]…<br>       nohup OPTION</p>
<p>DESCRIPTION<br>       Run COMMAND, ignoring hangup signals.</p>
<pre><code>--help display this help and exit

--version
       output version information and exit
</code></pre><p>可见，nohup 的使用是十分方便的，只需在要处理的命令前加上 nohup 即可，标准输出和标准错误缺省会被重定向到 nohup.out 文件中。一般我们可在结尾加上”&amp;”来将命令同时放入后台运行，也可用”&gt;filename 2&gt;&amp;1”来更改缺省的重定向文件名。</p>
]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Python Package开发]]></title>
      <url>http://tenstone.me/2016/03/18/tech/python-package%E5%BC%80%E5%8F%91/</url>
      <content type="html"><![CDATA[<p>今天在尝试开发Python Package的时候，总是Import Error，后来发现是终端找不到这个包，以下是解决方法：</p>
<p>首先需要使用sys.path.append方法将b.py所在目录加入到搜素目录中</p>
<pre><code>import sys 
sys.path.append(&apos;c:\xxxx\b.py&apos;) # 这个例子针对 windows 用户来说的 
</code></pre><p>使用pth文件，在 site-packages 文件中创建 .pth文件，将模块的路径写进去，一行一个路径，以下是一个示例，pth文件也可以使用注释：</p>
<pre><code># .pth file for the  my project
E:\DjangoWord
E:\DjangoWord\mysite
E:\DjangoWord\mysite\polls
</code></pre>]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[TuShare本地存储MongoDB文档设计]]></title>
      <url>http://tenstone.me/2016/03/17/tech/archived/TuShare%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8MongoDB%E6%96%87%E6%A1%A3%E8%AE%BE%E8%AE%A1/</url>
      <content type="html"><![CDATA[<p>TsShare是一个很强大的股票行情抓取项目，但并不提供本地存储的能力。因为项目需要把数据存储在MongoDB，写了这个集合文档设计供参考。</p>
<p><strong><em>后来发现使用数据库存储数据的效率相当底，以至于多次卡死。后来终于放弃了采集Ticks数据的方法，转而分析k线数据</em></strong></p>
<h1 id="集合设计"><a href="#集合设计" class="headerlink" title="集合设计"></a>集合设计</h1><h2 id="stocks"><a href="#stocks" class="headerlink" title="stocks"></a>stocks</h2><p>说明：基础数据，记录数据完整性等</p>
<pre><code>{
    _id:600496,
    update_at:{                 // 各数据上次更新时间
        stock_basics:2015-08-09 09:00:00,       
        stock_trades:2016-08-09 09:00:00,
        stock_news:2016-08-09 09:00:00
        stock_news_compute:2016-08-09 09:00:00
    }
}
</code></pre><h2 id="stock_basics"><a href="#stock-basics" class="headerlink" title="stock_basics"></a>stock_basics</h2><p>说明：分类、基本面、财报、其它参考数据，每季度刷新一次</p>
<pre><code>{
    code:600496,
    name:平安银行,
    industry:银行,
    area:深圳,
    pe:6.65,
    forecast:{              // 参考数据-业绩报告
        type,业绩变动类型【预增、预亏等】
        report_date,发布日期
        pre_eps,上年同期每股收益
        range,业绩变动范围
    },
    fund_holdings:{                         //参考数据-基金持股
        date:报告日期
        nums:基金家数
        nlast:与上期相比（增加或减少了）
        count:基金持股数（万股）
        clast:与上期相比
        amount:基金持股市值
        ratio:占流通盘比率
    },
    report:{                        //业绩报告（主表）
        eps,每股收益
        eps_yoy,每股收益同比(%)
        bvps,每股净资产
        roe,净资产收益率(%)
        epcf,每股现金流量(元)
        net_profits,净利润(万元)
        profits_yoy,净利润同比(%)
        distrib,分配方案
        report_date,发布日期
    },        
    profit:{                         //盈利能力
        roe,净资产收益率(%)
        net_profit_ratio,净利率(%)
        gross_profit_rate,毛利率(%)
        net_profits,净利润(万元)
        eps,每股收益
        business_income,营业收入(百万元)
        bips,每股主营业务收入(元)
    },      
    operation:{                     //营运能力
        arturnover,应收账款周转率(次)
        arturndays,应收账款周转天数(天)
        inventory_turnover,存货周转率(次)
        inventory_days,存货周转天数(天)
        currentasset_turnover,流动资产周转率(次)
        currentasset_days,流动资产周转天数(天)
    },      
    growth:{                            //成长能力
        mbrg,主营业务收入增长率(%)
        nprg,净利润增长率(%)
        nav,净资产增长率
        targ,总资产增长率
        epsg,每股收益增长率
        seg,股东权益增长率
    },          
    debtpaying:{                                     //偿债能力
        currentratio,流动比率
        quickratio,速动比率
        cashratio,现金比率
        icratio,利息支付倍数
        sheqratio,股东权益比率
        adratio,股东权益增长率
    },    
    cashflow:{                            //现金流量
        cf_sales,经营现金净流量对销售收入比率
        rateofreturn,资产的经营现金流量回报率
        cf_nm,经营现金净流量与净利润的比率
        cf_liabilities,经营现金净流量对负债比率
        cashflowratio,现金流量比率
    },

}
</code></pre><h2 id="stock_trades"><a href="#stock-trades" class="headerlink" title="stock_trades"></a>stock_trades</h2><p>说明：K线、成交量、分笔数据 ，每天下午6点更新当天数据</p>
<pre><code>{
    code:600496,
    date:2017-09-08,
    kline:{
        open：开盘价
        high：最高价
        close：收盘价
        low：最低价
        volume：成交量
        price_change：价格变动
        p_change：涨跌幅
        ma5：5日均价
        ma10：10日均价
        ma20:20日均价
        v_ma5:5日均量
        v_ma10:10日均量
        v_ma20:20日均量
        turnover:换手率[注：指数无此项]
    },
    ticks:[
        {
            time：时间
            price：成交价格
            change：价格变动
            volume：成交手
            amount：成交金额(元)
            type：买卖类型【买盘、卖盘、中性盘】
        }
    ]
}
</code></pre><h2 id="stock_news"><a href="#stock-news" class="headerlink" title="stock_news"></a>stock_news</h2><p>说明：临时数据，实验阶段</p>
<pre><code>{
    code:600496,
    date:2016-09-18,
    sina:[
        {
            title:&apos;xxx&apos;,
            views:1212,
            reply:123,
            tend_score:19       tend_score:内容评级
        }
    ],
    eastmoney:[
        {
            title:&apos;xxx&apos;,
            views:1212,
            reply:123,
            tend_score:19       tend_score:内容评级
        },
    ]
}
</code></pre>]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 快捷笔记 </tag>
            
            <tag> MongoDB </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[股市行情数据采集]]></title>
      <url>http://tenstone.me/2016/03/11/finance/archive/%E8%82%A1%E5%B8%82%E8%A1%8C%E6%83%85%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/</url>
      <content type="html"><![CDATA[<p>一曰形，二曰势，三曰情(大众讨论热度)：采集市场意愿数据</p>
<p><strong><em>后来采用的分析策略：TuShare + Jupyter Notebook + TensorFlow，尚未进行舆情分析</em></strong></p>
<h2 id="量化分析数据"><a href="#量化分析数据" class="headerlink" title="量化分析数据"></a>量化分析数据</h2><ol>
<li>资金流动：赤裸裸的资金博弈，其它因素不过影响资金的进出罢了</li>
<li>市场情绪，媒体指数（股吧，百度指数,微博）</li>
<li>周k线判断趋势</li>
</ol>
<h2 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h2><ol>
<li>采集数据</li>
<li>建模并验证</li>
<li>产品化</li>
</ol>
<h2 id="行情数据"><a href="#行情数据" class="headerlink" title="行情数据"></a>行情数据</h2><p>sinajs.cn<br><a href="http://www.cnblogs.com/luluping/archive/2010/11/15/1877817.html" target="_blank" rel="external">http://www.cnblogs.com/luluping/archive/2010/11/15/1877817.html</a><br><a href="http://www.codeweblog.com/stag/hq-sinajs-cn-api/" target="_blank" rel="external">http://www.codeweblog.com/stag/hq-sinajs-cn-api/</a><br><a href="https://www.douban.com/note/341559057/" target="_blank" rel="external">https://www.douban.com/note/341559057/</a>                                          </p>
<p><a href="http://quotes.money.163.com/trade/lsjysj_600496.html?year=2016&amp;season=1" target="_blank" rel="external">http://quotes.money.163.com/trade/lsjysj_600496.html?year=2016&amp;season=1</a>  // 历史交易数据<br><a href="http://quotes.money.163.com/trade/lszjlx_600496,0.html" target="_blank" rel="external">http://quotes.money.163.com/trade/lszjlx_600496,0.html</a>                      // 历史资金流向<br><a href="http://market.finance.sina.com.cn/downxls.php?date=2011-07-08&amp;symbol=sh600900//" target="_blank" rel="external">http://market.finance.sina.com.cn/downxls.php?date=2011-07-08&amp;symbol=sh600900//</a> 成交明细</p>
<h2 id="网络讨论热度指数"><a href="#网络讨论热度指数" class="headerlink" title="网络讨论热度指数"></a>网络讨论热度指数</h2><p><a href="http://data.weibo.com/index" target="_blank" rel="external">http://data.weibo.com/index</a>                     // 微博讨论指数<br><a href="http://index.baidu.com" target="_blank" rel="external">http://index.baidu.com</a>                          // 百度搜索指数</p>
<h2 id="技术"><a href="#技术" class="headerlink" title="技术"></a>技术</h2><p>continum科学计算依赖管理：<a href="https://www.continuum.io/downloads" target="_blank" rel="external">https://www.continuum.io/downloads</a></p>
]]></content>
      
        
        <tags>
            
            <tag> 金融 </tag>
            
            <tag> 股市 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[技术人员招聘]]></title>
      <url>http://tenstone.me/2016/02/22/job/%E6%97%85%E8%B6%A3%E6%8A%80%E6%9C%AF%E4%BA%BA%E5%91%98%E6%8B%9B%E8%81%98/</url>
      <content type="html"><![CDATA[<p>以前也有不少面试的经历，但总结下拉面试的时候聊得很好，但成功率极低，可以说几乎没有成功过。但吸引人才是创业过程中的必要一课，我必须在这个过程中Get√到这个技能。写下这篇文章留个笔记吧！</p>
<h2 id="招聘文案"><a href="#招聘文案：" class="headerlink" title="招聘文案："></a>招聘文案：</h2><blockquote>
<p>Web前端工程师</p>
<p>旅趣旅行 专注境外自由行<br>研发方向：行程问答、商城系统、基于人工智能的行程设计<br>福利待遇：弹性工作 8k-15k 期权 年终分红<br>发展空间：研发部门正在组建，岗位晋升空间大，公司业务飞速发展中</p>
<h3 id="需要你做的"><a href="#需要你做的" class="headerlink" title="需要你做的"></a>需要你做的</h3><ol>
<li>公司C端产品Web前端研发</li>
<li>协助公司B端产品维护</li>
<li>基于Cordova的App开发</li>
<li>编写测试用例（涉及后端部分）</li>
<li>等等你乐意参与的 ……</li>
</ol>
<h3 id="对你的要求"><a href="#对你的要求" class="headerlink" title="对你的要求"></a>对你的要求</h3><ol>
<li>对新技术保持激情，自发学习，对自己的技术有自信</li>
<li>熟练掌握各种前端技术(H5、CSS3、Javascript、jQuery等)</li>
<li>了解至少一种后端语言或开发框架(PHP、NodeJS、Python)</li>
<li>两年以上相关工作经验，有成熟的项目案例</li>
<li>数学基础较好者优先</li>
<li>技术博客作者更佳</li>
</ol>
</blockquote>
<p>PHP中级工程师<br>薪资水平：8k-15k 年终业绩提成<br>岗位职责：</p>
<ol>
<li>参与公司GDS（全球分销系统）开发</li>
<li>负责相关功能模块的维护和升级</li>
<li>所负责模块的文档编写</li>
</ol>
<p>岗位要求：</p>
<ol>
<li>一年以上Web开发经验</li>
<li>熟悉至少一种PHP框架，如Yii、Laravel、CodeIgniter、ThinkPHP等</li>
<li>熟悉标准SQL和数据库设计，具备MySQL数据库设计和性能优化经验</li>
<li>熟练掌握HTML、CSS、jQuery</li>
<li>有使用SVN或Git多人协作的经验</li>
<li>有良好的团队合作能力，善于沟通，热爱学习</li>
<li>如果你在Github上贡献过项目或有自己的技术博客我们会非常欣赏</li>
</ol>
<p>旅趣在境外自由行领域正飞速发展，技术部门初建阶段，你有足够的发展空间，赶快加入吧！</p>
]]></content>
      
        <categories>
            
            <category> 工作 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 招聘 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[华杉解读《孙子兵法》]]></title>
      <url>http://tenstone.me/2016/02/22/notes/%E5%8D%8E%E6%9D%89%E8%A7%A3%E8%AF%BB%E3%80%8A%E5%AD%99%E5%AD%90%E5%85%B5%E6%B3%95%E3%80%8B/</url>
      <content type="html"><![CDATA[<blockquote>
<p>对于读书，应该广泛的读，还是一本书反复的读直到吃透掌握，将书中的知识消化形成习惯，这要取决于读书的目的，和读什么样的书。<br>放在过去，读书的目的是掌握知识，大量的读海量的读，很少有去反复的读揣摩着读。所以这么做，虽然增长了见识却并不足以去影响我们的习惯和行为。读了华杉解读的孙子兵法，感觉读到了其中的精妙，打算学以致用，所以需要换一种方法。</p>
</blockquote>
<p>“孙子兵法”所讲述的，是成就事业的大道智慧。简直赤裸裸的心理战。</p>
<ol>
<li>一战而定，要么不战。每一次动作都是要付出代价的，百战百胜的将军，是误国误民的污臣；</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[牛丫丫手工牛轧糖]]></title>
      <url>http://tenstone.me/2016/02/02/startup/%E7%89%9B%E4%B8%AB%E4%B8%AB%E6%89%8B%E5%B7%A5%E7%89%9B%E8%BD%A7%E7%B3%96/</url>
      <content type="html"><![CDATA[<h2 id="攻克心理障碍"><a href="#攻克心理障碍" class="headerlink" title="攻克心理障碍"></a>攻克心理障碍</h2><p>工作原因跟电脑打交道比较多，所以一直很反感微商什么的。也不高兴参与，甚至微信朋友圈都很少更新了。</p>
<p>这一次是妹子要求我的，要不然我可能不能走过心里这个砍，那些我在意的事情，大家并不一定放在心上，甚至于帮你出主意。</p>
<p>纠结再三，我最终还是在自己的微信朋友圈发了个广告。没想到效果还不错，第一次发就卖出了22袋，以至于后来材料都不够了。今天把糖带过来，给同事的时候，我脸都红了，但事实上大家知道我做这个兼职生意后都帮我出主意。吴兄以前是做食品行业的，建议使用蜂蜜味的杏仁；二彬是做天猫美工的，开玩笑提议把糖上架公司的天猫店。</p>
<p>问题是我总是羞于把自己的想法告诉大家，以为大家不支持，而事实上是完全相反。</p>
<h2 id="一些关于创业的体会"><a href="#一些关于创业的体会" class="headerlink" title="一些关于创业的体会"></a>一些关于创业的体会</h2><ol>
<li><p>以前在来一掌的时候，对丁佳林的一些做法都颇有认同，但体会没那么深罢了。CEO事实上完成的几个重要的工作：整合资源、聚拢人才、制定公司规则、寻找发展机会，而参与具体事务的执行，是下下策；</p>
</li>
<li><p>你的客户是你的客户，不是你的客户就不是你的客户。如果不是你的客户，磨尽嘴皮对方都不会打理你一下，还可能因此而讨厌你；而真正的客户是在不断的社交、营销、宣传中获得的，而在之后要做的事情是把客户聚拢起来，运营他们，在他们之间建立固定的供需和信赖关系；</p>
</li>
<li><p>基于第二点，做什么都是有机会的，重点在于：寻找的用户，并维护住他们，形成持续的供需关系。</p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 生活随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 创业手记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Bower常用命令]]></title>
      <url>http://tenstone.me/2016/01/20/tech/archived/Bower%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<ol>
<li><p>安装Bower</p>
<p> npm install -g bower</p>
</li>
<li><p>安装前端库   </p>
<p> bower install <package><br> bower install PACKAGE –save  // 保存到bower.json</package></p>
<p> bower init // 初始化bower.json</p>
</li>
</ol>
<p>示例：    </p>
<pre><code># registered package
$ bower install jquery
# GitHub shorthand
$ bower install desandro/masonry
# Git endpoint
$ bower install git://github.com/user/package.git
# URL
$ bower install http://example.com/script.js
</code></pre><ol>
<li><p>.bowerrc示例</p>
<p> {<br>   “directory”: “public/bower_components/“,<br>   “analytics”: false,<br>   “timeout”: 120000,<br>   “registry”: {</p>
<p>   }<br> }</p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 快捷笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[程序员思维与运营者思维]]></title>
      <url>http://tenstone.me/2016/01/14/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E6%80%9D%E7%BB%B4%E9%80%BB%E8%BE%91/</url>
      <content type="html"><![CDATA[<p>这篇文章是我对自己过去思维模式的反思。昨天吃着饭，不经意说自己毕业两年半了，他们说不像，哈哈。前天联系上了艾江山的邓兄，可他们已经在做APP了，真是遗憾，下面是邓兄的回复：</p>
<blockquote>
<p>嗯，您这么坦诚，我也给您开门见山，不瞒您说，我们从10月份开始，就在筹备艾江山app的事情，如果快的话，这一两个月第一个版本也要出来了。昨天看到您的这个想法我很惊讶，作为普通顾客，是不太可能会想到这个问题的！如果您对艾江山的项目真的很感兴趣、有意愿加入艾江山的话，我目前想到的存在几个问题，第一，您在南京，我们在上海；第二，我们自建技术团队的计划尚未提上日程，可能还需要一段时间；第三，毕竟我们还没见过面，您对艾江山的了解还不够全面，我们当前的状况可能并没有您想象中那么好，可能比您之前的公司更辛苦更累。因此，我希望我们可以继续保持联系，如果有机会您来上海或者我去南京的话，我们先抽空见面聊一聊，等我们第一版app出来之后，您也可以给我们一些意见和建议，一旦需要技术团队，我一定会优先邀请您加入。您看如何？</p>
</blockquote>
<p>当然是他曲解了我的本意，本想邀请他使用我用业余时间做的一款“艾灸速查”软件。他们的品牌建立起来一年多，淘宝店已经两个皇冠了，从品牌形象到人群运营都让人耳目一新，这让我对他们这个团队很感兴趣，也正是对他们品牌持续的观察，让我明白了：“有始有终，坚持为用户创造价值”或许才是运营的根本。听邓兄讲起来，他们应该是挺艰苦的，但是对外表现的品牌形象依旧是那么光鲜，他本人也给人一种彬彬有理的感觉。</p>
<p>通常在各种开源程序的社区中看到，程序猿自己做的网站，大多链接已失效，为什么呢？或许我自始至终都没跳出程序猿这个身份，无论做什么，总是从技术角度去考虑问题，而忽略了运营的重要性。稀里糊涂的觉得，使用技术可以解决任何问题，但终究还是在重复的拆掉和搭建不同的程序，在幻想中获得几个极大的成就感。但是归根到底，还是应该终结这种脱离运营的项目“运作”方式，因为，或许在这其中获得了技术水平的提升，但似乎是没有任何社会价值的，从中也无从获利（自诩是一个善良的人所以不动歪脑筋），作为一名程序猿，获取确实是过度高估了技术的作用，满足于技术带来的成就感而忘记自我。</p>
<p>换一个新的角度，技术本质是一个生产力革新的工具，像蒸汽机、发动机提供机械动力，而IT技术则是人类知觉感官的延伸。不同的是，IT技术带来的仅仅是感知和媒介的延伸，本身并不具备物质的生产力，但它却可以将生产设备、人……之间建立连接。一个工具而已，重要的是它能聚集起来的人群，改变了获取知识和沟通的方式。</p>
<p>所以，从现在开始，从更深的层次去思考，而不是技术，虽然技术也很重要。</p>
]]></content>
      
        <categories>
            
            <category> 生活随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 创业 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用Github项目协作]]></title>
      <url>http://tenstone.me/2016/01/13/tech/%E4%BD%BF%E7%94%A8Github%E9%A1%B9%E7%9B%AE%E5%8D%8F%E4%BD%9C/</url>
      <content type="html"><![CDATA[<h2 id="fork"><a href="#Fork" class="headerlink" title="Fork"></a>Fork</h2><p>从别人的项目中fork一个到你自己的仓库<br>这个时候这个仓库就是你的了，要删除这个仓库到设置-admin 那里，像你删除你自己创建的repo一样删除，（因为这个库就是你的了，你现在可以任意修改这个库，除非你pull request被接受否则你 不会对原作者的库产生任何影响）</p>
<p>比如osteach账号下有个osteach.github.com的库<br>这个项目的地址是https/github.com/osteach/osteach.github.com</p>
<p>这时候我（suziewong）想贡献代码了。fork之<br>fork之后，你的个人仓库就多了这个库<br><a href="https://github.com/suziewong/osteach.github.com" target="_blank" rel="external">https://github.com/suziewong/osteach.github.com</a></p>
<h2 id="开发并且提交代码"><a href="#开发并且提交代码" class="headerlink" title="开发并且提交代码"></a>开发并且提交代码</h2><p><strong>clone</strong></p>
<p>首先要从github上下载代码到本地，你需要执行如下命令：</p>
<pre><code>git clone https://github.com/suziewong/osteach.github.com.git 
cd osteach.github.com
</code></pre><p>然后代码到本地里了，你就可以各种修改  add commit 了</p>
<p><strong>commit</strong></p>
<p>当你修改代码之后，需要commit到本地仓库，执行的命令如下：</p>
<pre><code>git add xx
git commit  -m &apos;修改原因，相关说明信息&apos;
</code></pre><p><strong>push</strong></p>
<p>执行git commit之后，只是提交到了本机的仓库，而不是github上你账号的仓库。你需要执行push命令，把commit提交到服务器。</p>
<pre><code>这里你可以直接git push 木有问题直接到远程默认仓库，当然remote add 也木有问题，因为和操纵自己的库没有任何区别
git push
这里的git push  指的是push 到suziewong/osteach.github.com 的默认仓库（master）
</code></pre><p>这里有<strong>重点</strong></p>
<pre><code>这里你如果 remote add osteach osteach/osteach.github.com.git
好吧，你 
git push osteach master 之类的都是没用的
因为你没有权限！没有权限修改别人(osteach)的库!
</code></pre><h2 id="上游仓库"><a href="#上游仓库" class="headerlink" title="上游仓库"></a>上游仓库</h2><p><strong>添加远程仓库</strong></p>
<pre><code>git remote add origin https://github.com/suziewong/osteach.github.com.git 
</code></pre><p><strong>更新远程代码：</strong><br>好吧，这里得分2种情况<br>1.拉取自己的库的最新的代码到本地（这个其实和操纵自己的库没撒区别）</p>
<pre><code>git pull 
</code></pre><p>2.你正在开发，主作者【项目负责人】osteach也在开发，你当时fork的代码已经不是osteach的最新的代码了。<br> 这时候的你对你的代码肯定没问题，但是pull request 就有可以会出错，因为你fork的repo和现在的osteach的repo已经不一样了。<br> 这时候理论上osteach会close你的request，让你先pullosteach的最新代码。<br> 于是乎<br>    git remote add osteach osteach/osteach.github.com.git<br>    git fetch osteach master:develop</p>
<p>自己merge代码 不和谐的地方，这里肯定不能git pull,会提示conflict 即代码是需要自己merge的</p>
<pre><code>你修改代码后

git add 
git commit
</code></pre><p>然后测试一下是不是已经拉取完成最新的了。</p>
<pre><code>git pull osteach master 
</code></pre><p>你就会发现原先的出错不见了，变成了<strong>everything update   </strong></p>
<p>你就可以提交到自己的远程版本库了。<br>    git push origin master</p>
<p>之后你再pull request，osteach那边就木有出现 不能 auto merge的情况了，然后osteach看你的代码给不给力，<br>给力就merge你的代码到他的主分支去了。</p>
<h4 id="pull-request"><a href="#pull-request" class="headerlink" title="pull request"></a>pull request</h4><p>登陆github，在你自己的账号中的仓库中点击pull request，就会要求你输入pull request的原因和详细信息，你确认之后。osteach的owner就会收到并且审查，审查通过就会合并到主干上。</p>
]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 快捷笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[安装ImageMagick和php-imagick]]></title>
      <url>http://tenstone.me/2016/01/12/tech/archived/PHP%E5%AE%89%E8%A3%85ImageMagick/</url>
      <content type="html"><![CDATA[<p>pecl安装PHP组件报错，</p>
<pre><code>Warning: Invalid argument supplied for foreach() in Command.php on line 259
Warning: Invalid argument supplied for foreach() in Command.php on line 259
</code></pre><p>后来发现是php-pear安装版本错误，执行下列命令，删除原有旧版本的安装包，之后，结果如预期。</p>
<pre><code>yum erase php-pear
yum install php56w-pear
pecl install imagick
</code></pre><h3 id="pear-是php-extension-and-application-repository的缩写即php扩展和应用仓库"><a href="#PEAR-是“PHP-Extension-and-Application-Repository”的缩写，即PHP扩展和应用仓库" class="headerlink" title="PEAR 是“PHP Extension and Application Repository”的缩写，即PHP扩展和应用仓库"></a>PEAR 是“PHP Extension and Application Repository”的缩写，即PHP扩展和应用仓库</h3><blockquote>
<p>PEAR 将PHP程序开发过程中常用的功能编写成类库，涵盖了页面呈现、数据库访问、文件操作、数据结构、缓存操作、网络协议、WebService 等许多方面，用户可以通过下载这些类库并适当的作一些定制以实现自己需要的功能。避免重复发明“车轮”。PEAR 的出现大大提高了PHP 程序的开发效率和开发质量。</p>
</blockquote>
<h3 id="pecl-是php-extension-community-library的缩写即php-扩展库"><a href="#PECL-是“PHP-Extension-Community-Library”的缩写，即PHP-扩展库" class="headerlink" title="PECL 是“PHP Extension Community Library”的缩写，即PHP 扩展库"></a>PECL 是“PHP Extension Community Library”的缩写，即PHP 扩展库</h3><blockquote>
<p>PECL 可以看作PEAR 的一个组成部分，提供了与PEAR 类似的功能。不同的是PEAR的所有扩展都是用纯粹的PHP代码编写的，用户在下载到PEAR 扩展以后可以直接使用将扩展的代码包含到自己的PHP 文件中使用。而PECL是使用C 语言开发的，通常用于补充一些用PHP难以完成的底层功能，往往需要重新编译或者在配置文件中设置后才能在用户自己的代码中使用。</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 快捷笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CSS常用速查]]></title>
      <url>http://tenstone.me/2016/01/10/tech/archived/CSS%E5%B8%B8%E7%94%A8%E9%80%9F%E6%9F%A5/</url>
      <content type="html"><![CDATA[<ol>
<li><p>Table强制不换行</p>
<pre><code>.table td,.table th{word-break: keep-all;white-space:nowrap;}
</code></pre></li>
</ol>
]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 快捷笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[LiveReload实现浏览器自动刷新]]></title>
      <url>http://tenstone.me/2016/01/06/tech/archived/LiveReload%E5%AE%9E%E7%8E%B0%E6%B5%8F%E8%A7%88%E5%99%A8%E8%87%AA%E5%8A%A8%E5%88%B7%E6%96%B0/</url>
      <content type="html"><![CDATA[<h2 id="再也不用按f5节省了不少时间"><a href="#再也不用按F5，节省了不少时间" class="headerlink" title="再也不用按F5，节省了不少时间"></a>再也不用按F5，节省了不少时间</h2><p>昨天突然阅读到一篇文章<a href="http://andremadarang.com/livereload-and-browsersync-with-laravel/" target="_blank" rel="external">LiveReload admin Browsersync with Laravel</a>，于是乎发现了两个不错的前端开发辅助项目<a href="https://www.browsersync.io/" target="_blank" rel="external">Browsersync</a>和<a href="http://livereload.com/" target="_blank" rel="external">LiveReload</a>。</p>
<h2 id="livereload"><a href="#LiveReload" class="headerlink" title="LiveReload"></a>LiveReload</h2><ol>
<li><p>目前使用的是PhpStorm编辑器，使用的是Laravel，所以配置文件可能和gulp.js-livereload不同，以下是gulpfile.js配置详细：</p>
<pre><code>var elixir = require(&apos;laravel-elixir&apos;);
    require(&apos;laravel-elixir-livereload&apos;);       
    elixir(function (mix) {
    mix.livereload();
});
</code></pre></li>
<li><p>安装<a href="https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei?hl=zh-CN" target="_blank" rel="external">Chrome插件</a></p>
</li>
<li><p>如果你没有使用Laravel，那么请参考<a href="https://cnodejs.org/topic/53427d16dc556e3b3901861e" target="_blank" rel="external">中文资料</a>，对应的grulpfile.js：</p>
<pre><code>var gulp = require(&apos;gulp&apos;),livereload = require(&apos;gulp-livereload&apos;);
gulp.task(&apos;watch&apos;, function () {    // 这里的watch，是自定义的，写成live或者别的也行
    var server = livereload();
    // app/**/*.*的意思是 app文件夹下的 任何文件夹 的 任何文件
    gulp.watch(&apos;app/**/*.*&apos;, function (file) {
        server.changed(file.path);
    }); 
});
</code></pre></li>
<li><p>执行gulp watch并点击浏览器上的“Enable Livereload”开始你的前端开发新旅程吧！</p>
</li>
</ol>
<h3 id="提示"><a href="#提示：" class="headerlink" title="提示："></a>提示：</h3><p>网页要使用服务器打开，如果你使用laravel，则运行</p>
<pre><code>php artisan serve
</code></pre><p>如果是在线调试，打开你对应的页面，只要在对应的页面开启“Livereload”插件即可。        </p>
<h2 id="browsersync"><a href="#Browsersync" class="headerlink" title="Browsersync"></a>Browsersync</h2><p>这是从官网翻译来的介绍，</p>
<blockquote>
<p>Browsersync能让浏览器实时、快速响应您的文件更改（html、js、css、sass、less等）并自动刷新页面。更重要的是 Browsersync可以同时在PC、平板、手机等设备下进项调试。您可以想象一下：“假设您的桌子上有pc、ipad、iphone、android等设备，同时打开了您需要调试的页面，当您使用browsersync后，您的任何一次代码保存，以上的设备都会同时显示您的改动”。无论您是前端还是后端工程师，使用它将提高您30%的工作效率。</p>
</blockquote>
<p>想必你已经心动了吧？稍后奉上详细的配置方法。</p>
]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 快捷笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Nodejs NPM的使用]]></title>
      <url>http://tenstone.me/2016/01/05/tech/archived/Nodejs-NPM%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>npm install b –save會幫你安裝並添加依赖</p>
<pre><code>npm config set strict-ssl false             //关闭npm的HTTPS
npm config set registry &quot;http://registry.npmjs.org/&quot;    //设置npm的获取地址
npm config set proxy=http://代理服务器ip:代理服务器端口 

npm config delete http-proxy    // 清除npm代理
npm config delete https-proxy
</code></pre><p><a href="https://github.com/nimojs/blog/issues/20" target="_blank" rel="external">淘宝NPM镜像</a></p>
]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 快捷笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Composer和Laravel的一些小技巧]]></title>
      <url>http://tenstone.me/2015/12/21/tech/archived/Composer%E5%92%8CLaravel%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<h2 id="composer-两个小技巧"><a href="#Composer-两个小技巧" class="headerlink" title="Composer 两个小技巧"></a>Composer 两个小技巧</h2><p>使用Composer以后，Laravel的开发效率提升了不止一点点</p>
<ol>
<li>composer update foo/bar  // 更新单个库</li>
<li>composer update nothing  // 仅更新composer.lock</li>
<li>composer require “foo/bar:1.0.0”  // 无需编辑composer.json直接安装库  </li>
<li>composer dump-autoload –optimize  // 生产环境中优化自动加载，提升性能</li>
<li>composer config -g repo.packagist   // composer <a href="http://packagist.phpcomposer.com" target="_blank" rel="external">http://packagist.phpcomposer.com</a> 设置国内镜像<a href="http://pkg.phpcomposer.com" target="_blank" rel="external">参考地址</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 快捷笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS 7一键部署VPN]]></title>
      <url>http://tenstone.me/2015/12/18/tech/archived/CentOS-7%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2VPN/</url>
      <content type="html"><![CDATA[<p>参考：<a href="https://blog.linuxeye.com/412.html" target="_blank" rel="external">https://blog.linuxeye.com/412.html</a></p>
<p>从Windows Copy到Linux时，解决/bin/bash^M: bad interpreter: No such file or directory问题</p>
<pre><code>sed -i -e &apos;s/\r$//&apos; vpn_setup.sh
</code></pre><p>vpn_setup.sh 脚本内容</p>
<pre><code>#!/bin/bash
#
# Author:  yeho &lt;lj2007331 AT gmail.com&gt;
# Blog:  http://blog.linuxeye.com
#
# Installs a PPTP VPN-only system for CentOS

# Check if user is root
[ $(id -u) != &quot;0&quot; ] &amp;&amp; echo &quot;Error: You must be root to run this script&quot; &amp;&amp; exit 1

export PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
clear
printf &quot;
#######################################################################
#    LNMP/LAMP/LANMP for CentOS/RadHat 5+ Debian 6+ and Ubuntu 12+    #
# For more information please visit http://blog.linuxeye.com/31.html  #
#######################################################################
&quot;

[ ! -e &apos;/usr/bin/curl&apos; ] &amp;&amp; yum -y install curl

VPN_IP=`curl ipv4.icanhazip.com`

VPN_USER=&quot;linuxeye&quot;
VPN_PASS=&quot;linuxeye&quot;

VPN_LOCAL=&quot;192.168.0.150&quot;
VPN_REMOTE=&quot;192.168.0.151-200&quot;

while :
do
        echo
        read -p &quot;Please input username: &quot; VPN_USER 
        [ -n &quot;$VPN_USER&quot; ] &amp;&amp; break
done

while :
do
        echo
        read -p &quot;Please input password: &quot; VPN_PASS
        [ -n &quot;$VPN_PASS&quot; ] &amp;&amp; break
done
clear


if [ -n &quot;`grep &apos;CentOS Linux release 7&apos; /etc/redhat-release`&quot; ];then
        #CentOS_REL=7
    if [ ! -e /etc/yum.repos.d/epel.repo ];then
        cat &gt; /etc/yum.repos.d/epel.repo &lt;&lt; EOF
[epel]
name=Extra Packages for Enterprise Linux 7 - \$basearch
#baseurl=http://download.fedoraproject.org/pub/epel/7/\$basearch
mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-7&amp;arch=\$basearch
failovermethod=priority
enabled=1
gpgcheck=0
EOF
fi
        for Package in wget make openssl gcc-c++ ppp pptpd iptables iptables-services 
        do
                yum -y install $Package
        done
        echo &apos;net.ipv4.ip_forward = 1&apos; &gt;&gt; /etc/sysctl.conf
elif [ -n &quot;`grep &apos;CentOS release 6&apos; /etc/redhat-release`&quot; ];then
        #CentOS_REL=6
        for Package in wget make openssl gcc-c++ iptables ppp 
        do
                yum -y install $Package
        done
    sed -i &apos;s@net.ipv4.ip_forward.*@net.ipv4.ip_forward = 1@g&apos; /etc/sysctl.conf
    rpm -Uvh http://poptop.sourceforge.net/yum/stable/rhel6/pptp-release-current.noarch.rpm
    yum -y install pptpd
else
        echo -e &quot;\033[31mDoes not support this OS, Please contact the author! \033[0m&quot;
        exit 1
fi


echo &quot;1&quot; &gt; /proc/sys/net/ipv4/ip_forward

sysctl -p /etc/sysctl.conf

[ -z &quot;`grep &apos;^localip&apos; /etc/pptpd.conf`&quot; ] &amp;&amp; echo &quot;localip $VPN_LOCAL&quot; &gt;&gt; /etc/pptpd.conf # Local IP address of your VPN server
[ -z &quot;`grep &apos;^remoteip&apos; /etc/pptpd.conf`&quot; ] &amp;&amp; echo &quot;remoteip $VPN_REMOTE&quot; &gt;&gt; /etc/pptpd.conf # Scope for your home network

if [ -z &quot;`grep &apos;^ms-dns&apos; /etc/ppp/options.pptpd`&quot; ];then
    echo &quot;ms-dns 8.8.8.8&quot; &gt;&gt; /etc/ppp/options.pptpd # Google DNS Primary
    echo &quot;ms-dns 209.244.0.3&quot; &gt;&gt; /etc/ppp/options.pptpd # Level3 Primary
    echo &quot;ms-dns 208.67.222.222&quot; &gt;&gt; /etc/ppp/options.pptpd # OpenDNS Primary
fi

echo &quot;$VPN_USER pptpd $VPN_PASS *&quot; &gt;&gt; /etc/ppp/chap-secrets

ETH=`route | grep default | awk &apos;{print $NF}&apos;`
[ -z &quot;`grep &apos;1723 -j ACCEPT&apos; /etc/sysconfig/iptables`&quot; ] &amp;&amp; iptables -I INPUT 4 -p tcp -m state --state NEW -m tcp --dport 1723 -j ACCEPT
[ -z &quot;`grep &apos;gre -j ACCEPT&apos; /etc/sysconfig/iptables`&quot; ] &amp;&amp; iptables -I INPUT 5 -p gre -j ACCEPT 
iptables -t nat -A POSTROUTING -o $ETH -j MASQUERADE
service iptables save
sed -i &apos;s@^-A INPUT -j REJECT --reject-with icmp-host-prohibited@#-A INPUT -j REJECT --reject-with icmp-host-prohibited@&apos; /etc/sysconfig/iptables 
sed -i &apos;s@^-A FORWARD -j REJECT --reject-with icmp-host-prohibited@#-A FORWARD -j REJECT --reject-with icmp-host-prohibited@&apos; /etc/sysconfig/iptables 
service iptables restart

service pptpd restart
chkconfig pptpd on
clear

echo -e &quot;You can now connect to your VPN via your external IP \033[32m${VPN_IP}\033[0m&quot;

echo -e &quot;Username: \033[32m${VPN_USER}\033[0m&quot;
echo -e &quot;Password: \033[32m${VPN_PASS}\033[0m&quot;
</code></pre>]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 快捷笔记 </tag>
            
            <tag> CentOS </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS 7下安装MySQL使用参考]]></title>
      <url>http://tenstone.me/2015/12/18/tech/archived/MySQL%E4%BD%BF%E7%94%A8%E5%8F%82%E8%80%83/</url>
      <content type="html"><![CDATA[<p>部署环境：CentOS下安装MySQL5.6.28。一开始安装MySQL5.7.10也是遇到这个问题。</p>
<h2 id="改变数据目录后无法启动"><a href="#改变数据目录后无法启动" class="headerlink" title="改变数据目录后无法启动"></a>改变数据目录后无法启动</h2><p>倒腾了一天，最后执行了一个软连接命令就解决了。至于原因到底是什么，还不清楚，但是这种方法解决了问题。</p>
<pre><code>ln -s /alidata/mysqldata mysql
#ln -s 源目录 目录或连接名
</code></pre><h2 id="数据转移"><a href="#数据转移" class="headerlink" title="数据转移"></a>数据转移</h2><p>以前一直使用Navicat通过数据传输的方式转移或备份数据，但是今天转移数据到正式服时，一直报错并显示</p>
<pre><code>Data truncated for column `???` ??? ...
</code></pre><p>看起来Navicat把数据截断了，后来使用mysqldump转移成功</p>
<pre><code>mysqldump -u root qjiatrip &gt; backup.sql
#mysqldump -u 用户名 数据库名 &gt; 备份名.sql
</code></pre><p>从sql中恢复数据</p>
<pre><code>mysql&gt; use xxxdatabase;
mysql&gt; source ~/backup.sql
</code></pre><p>从sql文件导入数据：</p>
<pre><code>mysql -u root qtrip_scm &lt;~/20160107.sql
</code></pre><p>嗯，就是这样。</p>
]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 快捷笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[来一掌O2O平台技术架构]]></title>
      <url>http://tenstone.me/2015/12/04/tech/%E6%9D%A5%E4%B8%80%E6%8E%8CO2O%E5%B9%B3%E5%8F%B0%E6%8A%80%E6%9C%AF%E6%9E%B6%E6%9E%84/</url>
      <content type="html"><![CDATA[<p>来一掌CTO还是我人生路上还是比较重要的一个角色。留下技术笔记，供后来回忆，也给大家用来参考。</p>
<h2 id="技术框架"><a href="#技术框架" class="headerlink" title="技术框架"></a>技术框架</h2><p>后台：CentOS、Nginx、PHP、MySQL<br>前端：Angularjs<br>PHP framework：Laravel<br>选择前端框架的时候，纠结了好一整子，错过了ionicframework。后来发现企查查把这个基于Angularjs的框架用的很好，所以我在自己的另一个“灸法速查”项目中用了起来，效率还是挺高的。</p>
<h2 id="说说modern-php"><a href="#说说Modern-PHP" class="headerlink" title="说说Modern PHP"></a>说说Modern PHP</h2><p>后来才知道更多人用的是PHP5.3以前的版本，当时花了很多时间找到这个Laravel框架，14年底刚刚开始在国内流行，但是在国外已经风生水气了。一个最大的好处是借鉴了Linux的包管理机制，在<a href="http://packagist.org" target="_blank" rel="external">packagist.org</a>可以找到大多数你需要开发，但是已经有人做好了的功能。所需要做的，就是把包名加入composer.json，执行php composer.phar update，然后参照文档编写。<br>如果你想更深入的了解Modern PHP，可以Star这个仓库：<a href="https://github.com/laravel-china/php-the-right-way" target="_blank" rel="external">https://github.com/laravel-china/php-the-right-way</a>。</p>
<h2 id="restful风格"><a href="#RESTful风格" class="headerlink" title="RESTful风格"></a>RESTful风格</h2><p>前端与后端，所有的数据都是Ajax获取，这也造成了页面卡顿需要加载时间，或许引入缓加载可以减轻这个问题。这么做的好处是，在将来开发安卓和iOS端的时候，没必要再重新做一遍后端开发了。其实在年底的时候，已经发现大多数人采用了这种方式，也有人比我们优化的更好。<br>后来做一个SCM系统时，采用了传统的网页方式，RESTful有以下好处：</p>
<blockquote>
<ol>
<li>减少查询次数，提升并发能力，提升访问速度</li>
<li>将来可以与iOS和Android兼容</li>
<li>简化后台数据存取逻辑，实际是转移到前端去了</li>
<li>在结合Angularjs等前端MVVM框架的时候，实现但页面应用</li>
</ol>
</blockquote>
<h2 id="基于系统可靠性的考虑"><a href="#基于系统可靠性的考虑" class="headerlink" title="基于系统可靠性的考虑"></a>基于系统可靠性的考虑</h2><ol>
<li>使用事务管理</li>
<li>定期的数据备份（每天一次系统镜像）</li>
</ol>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>整个系统没有太大的技术难点，要说比较麻烦的地方，就是时间块的管理吧。每个推拿师的可接单时间，都被划分成块存储在可用时间表里，这部分当时有点过度设计了，但是在做的时候，并不能搞清楚需要做成什么样子。</p>
]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Git自动化部署的研究]]></title>
      <url>http://tenstone.me/2015/12/04/tech/archived/Git%E8%87%AA%E5%8A%A8%E5%8C%96%E9%83%A8%E7%BD%B2%E7%9A%84%E7%A0%94%E7%A9%B6/</url>
      <content type="html"><![CDATA[<p>在来一掌时使用的手动Git部署脚本</p>
<pre><code>#!/bin/sh
echo &apos;Starting Deployment...&apos;
cd /alidata/wwwroot/laiyizhang_v2
sudo -u apache git reset --hard
sudo -u apache git pull git@bitbucket.org:laiyizhang/laiyizhang_v2.git master

gulp mobile-lib-js
gulp mobile-app-js
gulp mobile-app-css

php composer.phar dump-autoload
php artisan cache:clear
php artisan route:cache
</code></pre>]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Nginx 常用配置]]></title>
      <url>http://tenstone.me/2015/12/04/tech/archived/Nginx-%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<p>收集一些常用的Nginx配置方法，具体说明见注释。</p>
<ol>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS" target="_blank" rel="external">HTTP访问控制(CORS)</a></li>
<li><a href="http://enable-cors.org/server_nginx.html" target="_blank" rel="external">CORS on Nginx 官方配置</a></li>
</ol>
<pre><code>location / {
    index  index.php index.html index.htm;
    # 隐藏index.php
    try_files $uri $uri/ /index.php$is_args$query_string;
    # CORS 预请求
    if ($request_method = &apos;OPTIONS&apos;) {
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Credentials true;
        add_header Access-Control-Allow-Methods &apos;GET, POST, OPTIONS&apos;;
        add_header &apos;Access-Control-Allow-Headers&apos; &apos;DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type&apos;;
        return 200;
    }
}
# 配置字体可以跨站调用
location ~* \.(eot|ttf|woff|svg)$ {
    add_header Access-Control-Allow-Origin *;
}

 # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
 #
 location ~ \.php$ {
    fastcgi_pass   127.0.0.1:9000;
    fastcgi_index  index.php;
    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
    include        fastcgi_params;
 }
</code></pre><ol>
<li>配置Nginx缓存，加速访问<a href="http://nginx.org/en/docs/http/ngx_http_headers_module.html" target="_blank" rel="external">官方参考</a></li>
</ol>
<pre><code># cache.appcache, your document html and data
location ~* \.(?:manifest|appcache|html?|xml|json)$ {
  expires -1;
  access_log logs/static.log;
}

# Feed
location ~* \.(?:rss|atom)$ {
  expires 1h;
  add_header Cache-Control &quot;public&quot;;
}

# Media: images, icons, video, audio, HTC
location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
  expires 1M;
  access_log off;
  add_header Cache-Control &quot;public&quot;;
}

# CSS and Javascript
location ~* \.(?:css|js)$ {
  expires 1y;
  access_log off;
  add_header Cache-Control &quot;public&quot;;
}

# WebFonts
# If you are NOT using cross-domain-fonts.conf, uncomment the following directive
# location ~* \.(?:ttf|ttc|otf|eot|woff|woff2)$ {
#  expires 1M;
#  access_log off;
#  add_header Cache-Control &quot;public&quot;;
# }
</code></pre>]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[寻人启事]]></title>
      <url>http://tenstone.me/2015/12/02/book/%E5%AF%BB%E4%BA%BA%E5%90%AF%E4%BA%8B/</url>
      <content type="html"><![CDATA[<p>那时我还在Q旅行做CTO，公司正在策划一款“智能旅行”的App，其中一个很重要的功能是“智能行程规划”，当时智能行程规划的技术尚不成熟，成熟的产品更是寥寥无几，早期阶段通过各种手段抄袭X妙旅行的设计，作为一个技术核心驱动的产品，没有人才的过程那个痛苦呀！</p>
<p>在尝试了各种逆向工程分析都用了之后，对X妙旅行的核心技术还是毫无眉目。无计可施的时候却在CNKI发现了一篇叫《旅游行程规划系统关键技术研究》的硕士学位论文。</p>
<p>后来我们做了几件事，找到作者本人李建伟：</p>
<ul>
<li>在人人网上搜索这个人的名字，知道这个人从西安电子科技大学硕士毕业，现在在苏州某软工作，个人资料里留了QQ邮箱；</li>
<li>Google搜索他的QQ号码，找到他在blogbus上的技术博客；</li>
<li>从blogbus上找到他的知乎、微博主页；</li>
<li>某同事后来惊诧了一下，他同学也在苏州某软，于是通过微信取得联系；</li>
<li>然后这位同学说，李建伟坐在他旁边。</li>
</ul>
<p>当时我们就跟这篇论文的作者联系上了，作为一个创业公司，搜索帮我们寻找到人才，解决了燃眉之急。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 写作 </tag>
            
            <tag> 搜索熊“寻人启事” </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[境外游市场竞争变化的感悟]]></title>
      <url>http://tenstone.me/2015/12/01/%E5%A2%83%E5%A4%96%E6%B8%B8%E5%B8%82%E5%9C%BA%E7%AB%9E%E4%BA%89%E5%8F%98%E5%8C%96%E7%9A%84%E6%84%9F%E6%82%9F/</url>
      <content type="html"><![CDATA[<p>上班的第一个月，我并不关注业绩，但在他们的谈话中，我似乎感觉到最近这三个月的数据并不理想。听其原因，是同质化竞争日趋严重，似乎每个行业都是这样，先驱者赚得第一桶金，当更多企业加入行业竞争的时候，价格战就开始了。</p>
<p>突然想起来知乎上关于小米Note3发布会的一个讨论，<a href="http://www.zhihu.com/question/37836708" target="_blank" rel="external">如何评价雷军在小米Note3发布会上落泪</a>。价格战是市场竞争的一剂毒药，当然从某种角度消费者是价格战的受益者。雷军说了句，友商是傻逼，从中足以体会他对手机行业现状的无奈。乐视在广告中已打出“生态补贴硬件，售价低于硬件成本”的广告词，甚至在官网打出了硬件BOM表。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 创业 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[搜索聚合的时代]]></title>
      <url>http://tenstone.me/2015/11/30/book/%E6%90%9C%E7%B4%A2%E8%81%9A%E5%90%88%E7%9A%84%E6%97%B6%E4%BB%A3/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>早在几年以前，我就非常想写一本跟搜索引擎有关的书，因为搜索引擎很有趣，我用它学会了现在掌握的大多数技能。或许跟你想的不太一样，我说的不是百度，也不特指Google，而是搜索的技巧和习惯。</p>
<p>Web是1992年出现的，1993年就有了Web搜索引擎，不过那时候还没有多少Web页面可供搜索。所以杨致远和大卫·费罗凭借一个人工编辑的网址站，就完成了整个互联网的导航，并因此创办了Yahoo!。正是因为搜索引擎的出现，才让互联网冲出了黑暗。</p>
<p>现在搜索随手可做，</p>
<p>“搜索”被所有具有互联网使用经验的人熟知，而且每天都在使用。<br>信息时代渐行渐远逐渐藏进我们的生活，利用各种方法挖掘信息的能力愈发重要。</p>
<h2 id="目录及话题"><a href="#目录及话题" class="headerlink" title="目录及话题"></a>目录及话题</h2><p>发现两者之间的联系，关键词+关键词<br>了解一个人、一个公司<br>傻子太多，骗子不够用</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 写作 </tag>
            
            <tag> 搜索熊“寻人启事” </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[谈业务，还是谈私交]]></title>
      <url>http://tenstone.me/2015/11/29/%E8%B0%88%E4%B8%9A%E5%8A%A1%EF%BC%8C%E8%BF%98%E6%98%AF%E8%B0%88%E7%A7%81%E4%BA%A4/</url>
      <content type="html"><![CDATA[<p>我没谈过什么业务，但听到的一些事情，让我觉得谈业务似乎是很简单的事情。无外乎 <strong>威逼</strong> 、 <strong>利诱</strong>  、 <strong>谈感情</strong> 。跟以前初中时看“成功学教父”陈安之的视频讲的差不多嘛，逃避痛苦和追求快乐是人性的诉求，而“威逼”代表痛苦，“利诱”和“谈感情”代表快乐。当我们都熟知了这些方法论，谈判要素就变成了双方手中的筹码。</p>
<p>人性中还有一个要素是“贪婪”，归于追求快乐也很勉强吧？这是我们COO从泰国回来后分享的故事。DTAC副总裁，据说是一位泰国美女，打算向中国售卖化妆品，而我们希望拿到DTAC对外谈判的授权或者独家代理或者更低的进货价等等。这足以让这位泰国美女与我们的COO结成同盟，各取所需，这大概就是社会的现实吧？那个对你有所求的人，就是谈判对手的软肋。当然换一个说法也是妥当的，大家互相帮助，哈哈互相帮助。如果你不能给对方带来好处，TA为什么要帮助你？</p>
<p>当然这也只是谈判桌上一个客观的现象而已，世上还是有很多带来温暖的人。想要成事，首要的还是先学会做人，学会给别人温暖，学会聊的投机，建立私人感情。</p>
]]></content>
      
        <categories>
            
            <category> 生活随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 创业 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[坎坷融资路]]></title>
      <url>http://tenstone.me/2015/11/29/job/%E5%9D%8E%E5%9D%B7%E8%9E%8D%E8%B5%84%E8%B7%AF/</url>
      <content type="html"><![CDATA[<p>2015年10月26日，我加入了某境外游项目。鉴于对融资过程见闻体会。这是一个已经盈利的项目，一半以上的股东在35岁以上。跟想象的一样，我占了点小股但工资不高，当然我看重的是两年内公司能达到一个不错的规模，或许在南京买一个大一点的房子就变成一件很有可能的事情。就在我加入不久，公司与某天宫签订TS（投资意向书），但他们不会全投，需要我们继续寻找跟投。<br>在我加入前，就已经初步达成了投资意向，后来他们说我卡的时间点太对了。不久后就签订TS，与某天宫确立领头关系。小VC受个人决定的影响较大，或许并不是足够的客观，公关效果较大。为了寻找跟投，我们联系了南京融资界的“皮条客”，皮条客给我们介绍了很多家，IDG是其中之一。在常亮眼中，这位皮条客挺“地头蛇”的。IDG是国际顶级投资公司，之前只是在新闻里听说过，没想到我们这么小规模的公司也能碰上这么大的投行公司。作为CTO，融资的事情前期与我并无多大关系，但是我还是要跟着一起看看是怎么回事，哈哈哈。听说，IDG内部认为，融资额少于5000w的都属于早期项目。</p>
<p><img src="/images/2016/IDG_vc_reply.jpg" alt=""><br>从回复上看，IDG的尽调能力可见一斑，每一点都切中要害。一个投资机构的投资水平，体现在分析师的角色身上，对于大型融资机构而言，外围尽调到企业财务、行业能力似乎是基础能力。所以在跟大机构谈融资时，还是实诚点比较好。几点体会：</p>
<ol>
<li>做企业需要做好内功，内功不足，还是会被看出来的</li>
<li>不急着吹牛，先做点什么证明自己所说的</li>
</ol>
<h2 id="某牛"><a href="#某牛" class="headerlink" title="某牛"></a>某牛</h2><p>听说去年就有过投资意向，但价格太低我们不干，而今年某牛却一直在风头浪尖上。</p>
<blockquote>
<p> 现在已经是2016年了，本轮融资又被搁置，战线拉长。上面说的这些没有一个成功的。</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 融资 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[商业运营的本质是人群运营]]></title>
      <url>http://tenstone.me/2015/11/29/%E5%95%86%E4%B8%9A%E8%BF%90%E8%90%A5%E7%9A%84%E6%9C%AC%E8%B4%A8%E6%98%AF%E4%BA%BA%E7%BE%A4%E8%BF%90%E8%90%A5/</url>
      <content type="html"><![CDATA[<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p>经历过O2O的第一波浪潮，从踌躇满志到战略转型，似乎资本催生的一波互联网创业热潮即将过去，也有称这一段时间为“资本寒冬”，忽冷忽热是资本市场的运行规律，只有那些抓住机会并且掌握住第一批用户的创业者有机会活下来。后来我离开来一掌了，项目失利，而我却通过这个项目完成了从就业到创业者的身份转变。</p>
<p>从最初的技术出身，后来机缘巧合让我做了产品经理，再后来经历创业，一步一步发现商业运营的本质是人群运营。而技术和产品只能作为重要的运营的手段，而运营却是围绕着人群进行。没有人群，运营的是什么东西呢？没有运营，如何完成服务和商品的销售？没有服务或商品的销售，自然而然也就没有现金流，没了现金流就不能称之为商业。所以商业的本质还是服务人群，有人的地方便会有各种各样的需求，通过运营手段使服务、商品、消费形成闭环，并且在不断的积累中，获得更多的用户资源。</p>
<h2 id="机会与风险并存"><a href="#机会与风险并存" class="headerlink" title="机会与风险并存"></a>机会与风险并存</h2><p>中国有15亿人口，没有任何一个公司能将自己的产品覆盖到中国的所有公民。人的需求，却又无外乎衣、食、住、行，健康、学习、工作、旅行……这些需求总归是有限的，但是随着社会的发展，人类的需求又是不断升级的：十年前，早饭豆浆油条豆腐花已经足够了，但今天我们希望吃的更有营养、更健康，所以针对不同的人群出现了“豆浆机”、“蒸蛋器”、“肯德基”等等，所以任何时代都会有自己的独特性，创业者能够通过这些特性去Get√属于自己的人群。也因此，人群是没有黏性的，今天你的产品满足不了他的需求，明天他就会挑选别的更符合自身需求的产品。</p>
<h2 id="一些想法"><a href="#一些想法" class="headerlink" title="一些想法"></a>一些想法</h2><p>创业的过程也是创造的过程，一些不为人知的产品，通过营销、传达、编故事的方式让更多的人知道甚至流行，从而产品大量的消费和购买。而根本，在于我们如何去发现资源、并且把故事讲的迷人，让人们深信不疑。市场是愚钝的，一切事在人为。</p>
<p>以人为本，这是这个时代任何（商业、政治）团体发展壮大的前提。</p>
<h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p>个人臆想，若不慎让您作出错误的决定，不负责任。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 创业 </tag>
            
            <tag> 运营 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git快捷操作笔记]]></title>
      <url>http://tenstone.me/2015/09/02/tech/archived/Git%E5%BF%AB%E6%8D%B7%E6%93%8D%E4%BD%9C%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h1 id="版本管理"><a href="#版本管理" class="headerlink" title="版本管理"></a>版本管理</h1><p>版本回退到某一一次commits</p>
<pre><code>$ sudo -u apache git reset --hard 8d5e87c
</code></pre><p>测试SSH</p>
<pre><code>$ sudo -u apache ssh -vT git@bitbucket.org
</code></pre><h2 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h2><pre><code>$ git branch              //查看分支
$ git branch  &lt;name&gt;      //创建分支
$ git checkout  &lt;name&gt;    //切换分支
$ git merge  &lt;name&gt;       //合并分支到当前分支
$ git branch -d &lt;name&gt;    //删除分支   
</code></pre><p><a href="http://www.ruanyifeng.com/blog/2012/07/git.html" target="_blank" rel="external">分支管理策略</a>         </p>
<h1 id="hook-自动部署"><a href="#Hook-自动部署" class="headerlink" title="Hook 自动部署"></a>Hook 自动部署</h1><p><a href="http://overtrue.me/articles/2015/01/how-to-deploy-project-with-git-hook.html" target="_blank" rel="external">参考文档</a></p>
]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 快捷笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo快捷操作笔记]]></title>
      <url>http://tenstone.me/2015/09/02/tech/Hexo%E5%BF%AB%E6%8D%B7%E6%93%8D%E4%BD%9C%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">Hexo中文文档</a></p>
<h1 id="服务器和部署"><a href="#服务器和部署" class="headerlink" title="服务器和部署"></a>服务器和部署</h1><h2 id="本地"><a href="#本地" class="headerlink" title="本地"></a>本地</h2><p>启动服务器，指定IP地址。同时watch监视文档更新</p>
<pre><code>$ hexo server -i 127.0.0.1 -p 8000
</code></pre><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>部署至Github</p>
<pre><code>$ hexo d -g
</code></pre><p>等同于</p>
<pre><code>$ hexo generate
$ hexo deploy
</code></pre><h2 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h2><pre><code>$ hexo new [layout] &lt;title&gt;
</code></pre>]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 快捷笔记 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Markdown-语法说明]]></title>
      <url>http://tenstone.me/2015/09/02/tech/Markdown-%E8%AF%AD%E6%B3%95%E8%AF%B4%E6%98%8E/</url>
      <content type="html"><![CDATA[<h3 id="1-markdown是什么"><a href="#1-MARKDOWN是什么？" class="headerlink" title="1. MARKDOWN是什么？"></a>1. MARKDOWN是<em>什么</em>？</h3><p><strong>MARKDOWN</strong>是一种轻量级<strong>标记语言</strong>，它以纯文本形式(<em>易读、易写、易更改</em>)编写文档，并最终以HTML格式发布。<br><strong>MARKDOWN</strong>也可以理解为将以MARKDOWN语言编写的语言转换成HTML内容的工具，最初是一个perl脚本<em>Markdown.pl</em>。    </p>
<h3 id="3-为什么要使用它"><a href="#3-为什么要使用它？" class="headerlink" title="3. 为什么要使用它？"></a>3. <em>为什么</em>要使用它？</h3><ul>
<li>它是易读（<em>看起开舒服</em>）、易写（<em>语法简单</em>）、易更改<strong>纯文本</strong>。处处体现着<strong>极简主义</strong>的影子。</li>
<li>兼容HTML，可以转换为HTML格式发布。</li>
<li>跨平台使用。</li>
<li>越来越多的网站支持Markdown。</li>
<li>更方便清晰的组织你的电子邮件。（Markdown-here, Airmail）</li>
<li>摆脱Word（我不是认真的）。</li>
</ul>
<h3 id="4-怎么使用"><a href="#4-怎么使用？" class="headerlink" title="4. 怎么使用？"></a>4. <em>怎么</em>使用？</h3><p>如果不算<strong>扩展</strong>，Markdown的语法绝对<strong>简单</strong>到让你爱不释手。</p>
<p>废话太多，下面正文，Markdown语法主要分为如下几大部分：<br><strong>标题</strong>，<strong>段落</strong>，<strong>区块引用</strong>，<strong>代码区块</strong>，<strong>强调</strong>，<strong>列表</strong>，<strong>分割线</strong>，<strong>链接</strong>，<strong>图片</strong>，<strong>反斜杠 <code>\</code></strong>，<strong>符号’`’</strong>。</p>
<h4 id="41-标题"><a href="#4-1-标题" class="headerlink" title="4.1 标题"></a>4.1 标题</h4><p>两种形式：<br>1）使用<code>=</code>和<code>-</code>标记一级和二级标题。</p>
<blockquote>
<p>一级标题<br><code>=========</code><br>二级标题<br><code>---------</code></p>
</blockquote>
<p>效果：</p>
<blockquote>
<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题   "></a>一级标题   </h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2></blockquote>
<p>2）使用<code>#</code>，可表示1-6级标题。</p>
<blockquote>
<p># 一级标题<br>## 二级标题<br>### 三级标题<br>#### 四级标题<br>##### 五级标题<br>###### 六级标题    </p>
</blockquote>
<p>效果：</p>
<blockquote>
<h1 id="一级标题"><a href="#一级标题-1" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题-1" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6></blockquote>
<h4 id="42-段落"><a href="#4-2-段落" class="headerlink" title="4.2 段落"></a>4.2 段落</h4><p>段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用<strong>两个以上</strong>空格加上回车（引用中换行省略回车）。</p>
<h4 id="43-区块引用"><a href="#4-3-区块引用" class="headerlink" title="4.3 区块引用"></a>4.3 区块引用</h4><p>在段落的每行或者只在第一行使用符号<code>&gt;</code>,还可使用多个嵌套引用，如：</p>
<blockquote>
<p>> 区块引用<br>>&gt; 嵌套引用  </p>
</blockquote>
<p>效果：</p>
<blockquote>
<p>区块引用  </p>
<blockquote>
<p>嵌套引用 </p>
</blockquote>
</blockquote>
<h4 id="44-代码区块"><a href="#4-4-代码区块" class="headerlink" title="4.4 代码区块"></a>4.4 代码区块</h4><p>代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如<br>普通段落：</p>
<p>void main()<br>{<br>    printf(“Hello, Markdown.”);<br>}    </p>
<p>代码区块：</p>
<pre><code>void main()
{
    printf(&quot;Hello, Markdown.&quot;);
}
</code></pre><p><strong>注意</strong>:需要和普通段落之间存在空行。</p>
<h4 id="45-强调"><a href="#4-5-强调" class="headerlink" title="4.5 强调"></a>4.5 强调</h4><p>在强调内容两侧分别加上<code>*</code>或者<code>_</code>，如：</p>
<blockquote>
<p>*斜体*，_斜体_<br>**粗体**，__粗体__</p>
</blockquote>
<p>效果：</p>
<blockquote>
<p><em>斜体</em>，<em>斜体</em><br><strong>粗体</strong>，<strong>粗体</strong></p>
</blockquote>
<h4 id="46-列表"><a href="#4-6-列表" class="headerlink" title="4.6 列表"></a>4.6 列表</h4><p>使用<code>·</code>、<code>+</code>、或<code>-</code>标记无序列表，如：</p>
<blockquote>
<p>-（+*） 第一项<br>-（+*） 第二项<br>- （+*）第三项</p>
</blockquote>
<p><strong>注意</strong>：标记后面最少有一个<em>空格</em>或<em>制表符</em>。若不在引用区块中，必须和前方段落之间存在空行。</p>
<p>效果：</p>
<blockquote>
<ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
</blockquote>
<p>有序列表的标记方式是将上述的符号换成数字,并辅以<code>.</code>，如：</p>
<blockquote>
<p>1 . 第一项<br>2 . 第二项<br>3 . 第三项    </p>
</blockquote>
<p>效果：</p>
<blockquote>
<ol>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ol>
</blockquote>
<h4 id="47-分割线"><a href="#4-7-分割线" class="headerlink" title="4.7 分割线"></a>4.7 分割线</h4><p>分割线最常使用就是三个或以上<code>*</code>，还可以使用<code>-</code>和<code>_</code>。</p>
<h4 id="48-链接"><a href="#4-8-链接" class="headerlink" title="4.8 链接"></a>4.8 链接</h4><p>链接可以由两种形式生成：<strong>行内式</strong>和<strong>参考式</strong>。<br><strong>行内式</strong>：</p>
<blockquote>
<p>[younghz的Markdown库](https:://github.com/younghz/Markdown “Markdown”)。</p>
</blockquote>
<p>效果：</p>
<blockquote>
<p><a href="https:://github.com/younghz/Markdown" title="Markdown" target="_blank" rel="external">younghz的Markdown库</a>。</p>
</blockquote>
<p><strong>参考式</strong>：</p>
<blockquote>
<p>[younghz的Markdown库1][1]<br>[younghz的Markdown库2][2]<br>[1]:https:://github.com/younghz/Markdown “Markdown”<br>[2]:https:://github.com/younghz/Markdown “Markdown”    </p>
</blockquote>
<p>效果：</p>
<blockquote>
<p><a href="https:://github.com/younghz/Markdown" title="Markdown" target="_blank" rel="external">younghz的Markdown库1</a><br><a href="https:://github.com/younghz/Markdown" title="Markdown" target="_blank" rel="external">younghz的Markdown库2</a></p>
</blockquote>
<p><strong>注意</strong>：上述的<code>[1]:https:://github.com/younghz/Markdown &quot;Markdown&quot;</code>不出现在区块中。</p>
<h4 id="49-图片"><a href="#4-9-图片" class="headerlink" title="4.9 图片"></a>4.9 图片</h4><p>添加图片的形式和链接相似，只需在链接的基础上前方加一个<code>！</code>。</p>
<h4 id="410-反斜杠"><a href="#4-10-反斜杠" class="headerlink" title="4.10 反斜杠\"></a>4.10 反斜杠<code>\</code></h4><p>相当于<strong>反转义</strong>作用。使符号成为普通符号。</p>
<h4 id="411-符号"><a href="#4-11-符号’-’" class="headerlink" title="4.11 符号’`’"></a>4.11 符号’`’</h4><p>起到标记作用。如：</p>
<blockquote>
<p>`ctrl+a`</p>
</blockquote>
<p>效果：</p>
<blockquote>
<p><code>ctrl+a</code>    </p>
</blockquote>
<h4 id="5-都谁在用"><a href="#5-都谁在用？" class="headerlink" title="5. 都谁在用？"></a>5. 都<em>谁</em>在用？</h4><p>Markdown的使用者：</p>
<ul>
<li>GitHub</li>
<li>简书</li>
<li>Stack Overflow</li>
<li>Apollo</li>
<li>Moodle</li>
<li>Reddit</li>
<li>等等</li>
</ul>
<h4 id="6-感觉有意思趁热打铁推荐几个工具"><a href="#6-感觉有意思？趁热打铁，推荐几个工具。" class="headerlink" title="6. 感觉有意思？趁热打铁，推荐几个工具。"></a>6. 感觉有意思？趁热打铁，推荐几个<em>工具</em>。</h4><ul>
<li><strong>Chrome</strong>下的stackedit插件可以离线使用，很爽。也不用担心平台受限。<br>在线的dillinger.io算是评价好的了，可是不能离线使用。    </li>
<li><strong>Windowns</strong>下的MarkdownPad也用过，不过免费版的体验不是很好。    </li>
<li><strong>Mac</strong>下的Mou是国人贡献的，口碑很好。推荐。    </li>
<li><strong>Linux</strong>下的ReText不错。    </li>
</ul>
<p><strong>其实在对语法了如于心的话，直接用编辑器就可以了，脑子里满满的都是格式化好的文本啊。</strong><br>我现在使用<code>马克飞象</code> + <code>Markdown-here</code>，先编辑好，然后一键格式化，挺方便。</p>
<hr>
<p><strong>注意</strong>：不同的Markdown解释器或工具对相应语法（扩展语法）的解释效果不尽相同，具体可参见工具的使用说明。<br>虽然有人想出面搞一个所谓的标准化的Markdown，[没想到还惹怒了健在的创始人John Gruber]<br>(<a href="http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/)。" target="_blank" rel="external">http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/)。</a></p>
<hr>
<p>以上基本是所有traditonal markdown的语法。</p>
<p><a href="https://github.com/younghz/Markdown" target="_blank" rel="external">转载自younghz的Github</a></p>
]]></content>
      
        <categories>
            
            <category> IT技术 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
